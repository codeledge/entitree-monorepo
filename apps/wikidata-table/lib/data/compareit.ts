export const compareit = {
  nav: {
    Q8434: ["universities"],
    Q43015: [
      "banks",
      "currencies",
      "credit-cards",
      "cryptocurrencies",
      "cryptocurrency-exchanges",
    ],
    Q1071: ["countries", "languages"],
    Q61509: [
      "airlines",
      "international-airports",
      "intercity-bus-companies",
      "onlinetaxiservices",
    ],
    Q1727518: ["podcasts", "television-series", "fictional-humans-tv"],
    beta: [
      "occupations",
      "mobile-network-operators",
      "smartphones",
      "hotel-booking-websites",
      "museums",
      "zoos",
    ],
    test: [
      "gps-tracker",
      "netflix-series",
      "southparkepisodes",
      "german-creditcards",
      "pharmaceutical-companies",
      "german-railwaystations",
    ],
  },
  headerkey: {
    google_maps_rating: {
      name: "Q56024321",
      url: "google_maps_url",
      type: "float",
      render: "createlink(stars(data,0,5),row.google_maps_url)",
    },
    trustpilot_score: {
      name: "Q7848226",
      property: "trustpilot_score",
      type: "float",
      render: "stars(data,0,10)",
    },
    label: { name: "Q82799" },
    imdb_rating: {
      name: "Q56260283",
      type: "float",
      property: "imdb_rating",
      render:
        'createlink(stars(data,1,10),"https://tools.wmflabs.org/wikidata-externalid-url/?p=345&url_prefix=https://www.imdb.com/&id="+row.P345)',
      url: "P345",
      urlformat:
        "https://tools.wmflabs.org/wikidata-externalid-url/?p=345&url_prefix=https://www.imdb.com/&id=%s",
    },
  },
  languages: {
    en: ["English", "English"],
    sv: ["Swedish", "svenska"],
    de: ["German", "Deutsch"],
    fr: ["French", "fran\u00e7ais"],
    nl: ["Dutch", "Nederlands"],
    ru: ["Russian", "\u0440\u0443\u0441\u0441\u043a\u0438\u0439"],
    es: ["Spanish", "espa\u00f1ol"],
    it: ["Italian", "italiano"],
    pl: ["Polish", "polski"],
    vi: ["Vietnamese", "Ti\u1ebfng Vi\u1ec7t"],
    ja: ["Japanese", "\u65e5\u672c\u8a9e"],
    zh: ["Chinese", "\u4e2d\u6587"],
    pt: ["Portuguese", "portugu\u00eas"],
    uk: [
      "Ukrainian",
      "\u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430",
    ],
    fa: ["Persian", "\u0641\u0627\u0631\u0633\u06cc"],
    sr: ["Serbian", "\u0441\u0440\u043f\u0441\u043a\u0438 / srpski"],
    ar: ["Arabic", "\u0627\u0644\u0639\u0631\u0628\u064a\u0629"],
    ca: ["Catalan", "catal\u00e0"],
    no: ["Norwegian (Bokm\u00e5l)", "norsk"],
    sh: [
      "Serbo-Croatian",
      "srpskohrvatski / \u0441\u0440\u043f\u0441\u043a\u043e\u0445\u0440\u0432\u0430\u0442\u0441\u043a\u0438",
    ],
    fi: ["Finnish", "suomi"],
    id: ["Indonesian", "Bahasa Indonesia"],
    hu: ["Hungarian", "magyar"],
    ko: ["Korean", "\ud55c\uad6d\uc5b4"],
    cs: ["Czech", "\u010de\u0161tina"],
    ro: ["Romanian", "rom\u00e2n\u0103"],
    tr: ["Turkish", "T\u00fcrk\u00e7e"],
    eu: ["Basque", "euskara"],
    eo: ["Esperanto", "Esperanto"],
    ceb: ["Cebuano", "Cebuano"],
    ms: ["Malay", "Bahasa Melayu"],
    bg: ["Bulgarian", "\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438"],
    hy: ["Armenian", "\u0540\u0561\u0575\u0565\u0580\u0565\u0576"],
    da: ["Danish", "dansk"],
    he: ["Hebrew", "\u05e2\u05d1\u05e8\u05d9\u05ea"],
    "zh-min-nan": ["Min Nan", "B\u00e2n-l\u00e2m-g\u00fa"],
    sk: ["Slovak", "sloven\u010dina"],
    min: ["Minangkabau", "Baso Minangkabau"],
    war: ["Waray", "Winaray"],
    kk: ["Kazakh", "\u049b\u0430\u0437\u0430\u049b\u0448\u0430"],
    ce: ["Chechen", "\u043d\u043e\u0445\u0447\u0438\u0439\u043d"],
    hr: ["Croatian", "hrvatski"],
    lt: ["Lithuanian", "lietuvi\u0173"],
    et: ["Estonian", "eesti"],
    sl: ["Slovenian", "sloven\u0161\u010dina"],
    be: [
      "Belarusian",
      "\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u043a\u0430\u044f",
    ],
    el: ["Greek", "\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac"],
    gl: ["Galician", "galego"],
    ur: ["Urdu", "\u0627\u0631\u062f\u0648"],
    nn: ["Norwegian (Nynorsk)", "norsk nynorsk"],
    az: ["Azerbaijani", "az\u0259rbaycanca"],
    uz: ["Uzbek", "o\u02bbzbekcha/\u045e\u0437\u0431\u0435\u043a\u0447\u0430"],
    la: ["Latin", "Latina"],
    th: ["Thai", "\u0e44\u0e17\u0e22"],
    ka: ["Georgian", "\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8"],
    vo: ["Volap\u00fck", "Volap\u00fck"],
    ta: ["Tamil", "\u0ba4\u0bae\u0bbf\u0bb4\u0bcd"],
    azb: ["Southern Azerbaijani", "\u062a\u06c6\u0631\u06a9\u062c\u0647"],
    cy: ["Welsh", "Cymraeg"],
    mk: [
      "Macedonian",
      "\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438",
    ],
    tg: ["Tajik", "\u0442\u043e\u04b7\u0438\u043a\u04e3"],
    lv: ["Latvian", "latvie\u0161u"],
    ast: ["Asturian", "asturianu"],
    mg: ["Malagasy", "Malagasy"],
    oc: ["Occitan", "occitan"],
    tl: ["Tagalog", "Tagalog"],
    tt: ["Tatar", "\u0442\u0430\u0442\u0430\u0440\u0447\u0430/tatar\u00e7a"],
    ky: ["Kirghiz", "\u041a\u044b\u0440\u0433\u044b\u0437\u0447\u0430"],
    bs: ["Bosnian", "bosanski"],
    sq: ["Albanian", "shqip"],
    new: ["Newar", "\u0928\u0947\u092a\u093e\u0932 \u092d\u093e\u0937\u093e"],
    te: ["Telugu", "\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41"],
    "zh-yue": ["Cantonese", "\u7cb5\u8a9e"],
    br: ["Breton", "brezhoneg"],
    pms: ["Piedmontese", "Piemont\u00e8is"],
    "be-tarask": [
      "Belarusian (Tara\u0161kievica)",
      "\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u043a\u0430\u044f (\u0442\u0430\u0440\u0430\u0448\u043a\u0435\u0432\u0456\u0446\u0430)\u200e",
    ],
    bn: ["Bengali", "\u09ac\u09be\u0982\u09b2\u09be"],
    ml: ["Malayalam", "\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02"],
    jv: ["Javanese", "Basa Jawa"],
    lb: ["Luxembourgish", "L\u00ebtzebuergesch"],
    af: ["Afrikaans", "Afrikaans"],
    ht: ["Haitian", "Krey\u00f2l ayisyen"],
    sco: ["Scots", "Scots"],
    mr: ["Marathi", "\u092e\u0930\u093e\u0920\u0940"],
    ga: ["Irish", "Gaeilge"],
    pnb: ["Western Punjabi", "\u067e\u0646\u062c\u0627\u0628\u06cc"],
    is: ["Icelandic", "\u00edslenska"],
    sw: ["Swahili", "Kiswahili"],
    ba: ["Bashkir", "\u0431\u0430\u0448\u04a1\u043e\u0440\u0442\u0441\u0430"],
    cv: ["Chuvash", "\u0427\u04d1\u0432\u0430\u0448\u043b\u0430"],
    fy: ["West Frisian", "Frysk"],
    su: ["Sundanese", "Basa Sunda"],
    my: [
      "Burmese",
      "\u1019\u103c\u1014\u103a\u1019\u102c\u1018\u102c\u101e\u102c",
    ],
    lmo: ["Lombard", "lumbaart"],
    an: ["Aragonese", "aragon\u00e9s"],
    yo: ["Yoruba", "Yor\u00f9b\u00e1"],
    ne: ["Nepali", "\u0928\u0947\u092a\u093e\u0932\u0940"],
    pa: ["Eastern Punjabi", "\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40"],
    gu: ["Gujarati", "\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4\u0ac0"],
    io: ["Ido", "Ido"],
    scn: ["Sicilian", "sicilianu"],
    bpy: [
      "Bishnupriya Manipuri",
      "\u09ac\u09bf\u09b7\u09cd\u09a3\u09c1\u09aa\u09cd\u09b0\u09bf\u09af\u09bc\u09be \u09ae\u09a3\u09bf\u09aa\u09c1\u09b0\u09c0",
    ],
    kn: ["Kannada", "\u0c95\u0ca8\u0ccd\u0ca8\u0ca1"],
    ku: ["Kurdish (Kurmanji)", "kurd\u00ee"],
    ckb: ["Kurdish (Sorani)", "\u06a9\u0648\u0631\u062f\u06cc"],
    qu: ["Quechua", "Runa Simi"],
    arz: ["Egyptian Arabic", "\u0645\u0635\u0631\u0649"],
    mn: ["Mongolian", "\u043c\u043e\u043d\u0433\u043e\u043b"],
    "bat-smg": ["Samogitian", "\u017eemait\u0117\u0161ka"],
    si: ["Sinhalese", "\u0dc3\u0dd2\u0d82\u0dc4\u0dbd"],
    wa: ["Walloon", "walon"],
    nap: ["Neapolitan", "Napulitano"],
    yi: ["Yiddish", "\u05d9\u05d9\u05b4\u05d3\u05d9\u05e9"],
    am: ["Amharic", "\u12a0\u121b\u122d\u129b"],
    or: ["Odia", "\u0b13\u0b21\u0b3c\u0b3f\u0b06"],
    bug: ["Buginese", "\u1a05\u1a14 \u1a15\u1a18\u1a01\u1a17"],
  },
  dataset: {
    default: {
      properties: false,
      leftovers: true,
      isfunction: false,
      caseinsensitive: false,
      qualifier: [],
      addrest: false,
    },
    androidAppDetails: {
      function: "androidAppDetails",
      constraint: { P3418: 0 },
      properties: {
        all_rating: "android_all_rating",
        release_date: "android_release_date",
        downloads: "android_downloads",
      },
    },
    itunesAppDetails: {
      function: "itunesAppDetails",
      constraint: { P3861: 0 },
      properties: {
        all_rating: "itunes_all_rating",
        release_date: "itunes_release_date",
        all_reviews: "itunes_all_reviews",
      },
    },
    imdb_rating: {
      file: "imdb/ratings.json",
      leftovers: false,
      constraint: { P345: "arraykey" },
      properties: ["imdb_rating", "imdb_count"],
      source: "IMDb",
    },
    metacritic: {
      url: "http://api.marcalencc.com/metacritic/tvshow/south-park",
      github: "https://github.com/marcalencc/metacritic-api",
    },
    educated_at: {
      query:
        "SELECT ?item (count(*) AS ?count) WHERE {\n ?human wdt:P69 ?item;\n wdt:P31 wd:Q5 .\n } GROUP BY ?item",
      file: "wikidata/educated_at.json",
      update: "apifetch",
      constraint: { item: "item" },
      properties: { count: "wikidata_count_educated" },
      source: "Wikidata",
    },
    airline_accidents: {
      query:
        'SELECT ?item (count(*) AS ?count) (GROUP_CONCAT(year(?time); SEPARATOR = ", ") AS ?years) (count(?last) AS ?lately) WHERE {\n ?accident wdt:P31/wdt:P279* wd:Q744913.\n ?accident wdt:P137 ?item .\n OPTIONAL { ?accident wdt:P585 ?time . \n OPTIONAL { FILTER (year(?time) > 2008)\n BIND(1 AS ?last) } \n}} GROUP BY ?item',
      update: "apifetch",
      file: "wikidata/airline_accidents.json",
      constraint: { item: "item" },
      properties: {
        count: "airline_accidents",
        years: "airline_accidents_years",
        lately: "airline_accidents_last10years",
      },
    },
    flightradar_airlines: {
      file: "aviation/flightradar24/alldata.json",
      constraint: { P230: "icao", P229: "iata" },
      alternative_constraint: { P230: "icao" },
      properties: {
        airports_iata: "airports_iata",
        airports_icao: "airports_icao",
        airports_countries: "airports_countries",
      },
    },
    isao_report: {
      source_url:
        "https://www.iata.org/whatwedo/safety/audit/iosa/Pages/registry.aspx?Query=all",
      source: "IATA",
      spreadsheet: "isao",
      preparse: [
        ["country_to_code", "CountryName", "countrycode"],
        ["icao_changecountrycode", "countrycode", "countrycode"],
      ],
      constraint: { P230: "icao", P229: "iata" },
      alternative_constraint: { P230: "icao", P17P298: "countrycode" },
      properties: { expiry: "isao_expiry", displayname: "isao_name" },
    },
    google_maps_cid: {
      source: "Google Maps",
      function: "google_maps_cid",
      constraint: { P3749: 0 },
      properties: {
        name: "google_maps_name",
        rating: "google_maps_rating",
        url: "google_maps_url",
        coordinate: "P625",
        international_phone_number: "P1329",
        administrative_area_level_2: "region",
      },
    },
    collegescorecard: {
      name: "collegescorecard",
      id: "Q23927093",
      source: "College Scorecard",
      file: "university/Most-Recent-Cohorts-All-Data-Elements.json",
      source_url: "https://collegescorecard.ed.gov/data/",
      constraint: { P1771: "UNITID" },
      properties: {
        UGDS: "undergrad_students_count",
        COSTT4_A: "total_costs",
        TUITIONFEE_IN: { property: "P5894", unit: "Q4917" },
        ADM_RATE_ALL: "P5822",
        FEMALE: "female_male_ratio",
        UGDS_WOMEN: "female_male_ratio_undergrad",
        GRADS: "GRADS",
      },
    },
    shanghairanking: {
      name: "shanghairanking",
      source: "shanghairanking.com",
      source_url: "http://www.shanghairanking.com",
      spreadsheet: "shanghai_ranking",
      constraint: { P5242: "url" },
      properties: { world_rank: "shanghai_rank" },
    },
    timesranking: {
      name: "Times Higher Education World University Rankings",
      source: "timeshighereducation.com",
      source_url: "https://www.timeshighereducation.com",
      file: "university/approved_world_university_rankings_2018.json",
      constraint: { P5586: "id" },
      update: "timesuniversity",
      properties: {
        rank: "times_rank",
        scores_overall: "times_score_overall",
        scores_teaching: "times_score_teaching",
        scores_research: "times_score_research",
        scores_citations: "times_score_citations",
        scores_industry_income: "times_score_industry_outcome",
        scores_international_outlook: "times_score_international_outlook",
        stats_number_students: "P2196",
        stats_student_staff_ratio: "student_staff_ratio",
        stats_pc_intl_students: "intl_students_percantage",
        stats_female_male_ratio: "female_male_ratio",
      },
    },
    qsranking: {
      name: "QS University Rankings",
      source: "QS University Rankings",
      file: "university/approved_qs_university_2019.json",
      source_url: "https://www.topuniversities.com/",
      update: "qsuniversity",
      constraint: { P5584: "id" },
      properties: { overall_rank: "qs_rank" },
    },
    umultirank: {
      name: "Umulti University Rankings",
      source: "Umultirank",
      source_url: "https://www.umultirank.org/",
      file: "university/umutlirank.json",
      constraint: { P5600: "id" },
      properties: {
        overallPerformance: "umulti_performance",
        overallMobilePerformance: "uMasters graduationmutli_mobileperformance",
        U42: "bachelor_graduation_rate",
        U43: "masters_graduation_rate",
        U45: "ontime_graduation_bachelor",
        U46: "ontime_graduation_master",
        U53: "Research publications (size-normalised)",
        U56: "citation_rate",
        U57: "Top cited publications",
        U58: "Interdisciplinary publications",
        U62: "Co-publications with industrial partners",
        U61: "Income from private sources",
        U63: "Patents awarded (size-normalised)",
        U64: "Industry co-patents",
        U66: "Publications cited in patents",
        U68: "foreign_lang_bachelor_programmes",
        U69: "foreign_lang_master_programmes",
        U73: "international_academic_staff",
        U75: "International joint publications",
        U74: "International doctorate degrees",
        U81: "Regional joint publications",
        U82: "Income from regional sources",
      },
    },
    ccxt: {
      name: "CCXT cryptocurrency_exchanges data",
      file: "crypto/ccxt.json",
      source: "CCXT",
      source_url: "https://github.com/ccxt/ccxt",
      update: "ccxt",
      constraint: { domain: "domain" },
      alternative_constraint: { label: "name" },
      addrest: true,
      properties: {
        id: "ccxt_id",
        name: "name",
        publicAPI: "publicAPI",
        privateAPI: "privateAPI",
        countries: "P17",
        url: "P856",
        currencies: "traded_currencies",
        markets: "markets",
        currency_count: "currency_count",
        market_count: "market_count",
        domain: "domain",
        fiat_currencies: "fiat_currencies",
        crypto_currencies: "crypto_currencies",
        fiat_count: "fiat_count",
        crypto_count: "crypto_count",
        taker: {
          property: "P5896",
          qualifiers: { P518: "Q55956748" },
          unit: "Q11229",
        },
        maker: {
          property: "P5896",
          qualifiers: { P518: "Q55956741" },
          unit: "Q11229",
        },
      },
    },
    trustpilot: {
      source: "Trustpilot",
      function: "trustpilot_wikidata",
      nomatch: true,
      constraint: { P856: 0, P5161: 1, P856_alternative: 2 },
      properties: { score: "trustpilot_score", reviews: "trustpilot_reviews" },
    },
    alexa: {
      source: "alexa",
      function: "alexa",
      constraint: { P856: 0 },
      properties: { domain: "alexa_domain", rank: "P1661" },
    },
    dxomark: {
      url: "https://dxomark.com/category/mobile-reviews/",
      function: "smartphoneDxoMark",
      source: "DXOmark",
      constraint: { itemLabel: "name" },
      properties: { camera: "dxomark_camera_score" },
    },
  },
  page: {
    properties: {
      query: "SELECT ?item WHERE {\n ?item a wikibase:Property .\n}",
      header: [{ name: "name", property: "label", url: "item" }],
    },
    "mobile-network-operators": {
      query:
        'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q1941618.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
      header: [
        { property: "label" },
        { name: "P571", type: "date" },
        { property: "P17" },
        { property: "P159" },
        { property: "P414" },
        { property: "P2259" },
        { property: "P3744" },
      ],
    },
    smartphones: {
      query:
        "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31 wd:Q19723451 .\n ?item wdt:P5906 ?dxo\n }",
      header: [
        { property: "label", url: "item" },
        { name: "P577", type: "date" },
        { name: "P2048" },
        { name: "P2067" },
        { name: "P2610", visible: false },
        { name: "P2928" },
        { name: "P306" },
        { name: "P176" },
        { name: "P4140" },
        { name: "P880" },
        { name: "P7080" },
        { name: "dxomark_camera_score" },
        { name: "P4723", visible: false },
        { name: "P6949", visible: false },
        { name: "P2935", visible: false },
        { name: "P2284", visible: false },
      ],
      dataset: ["dxomark"],
    },
    "intercity-bus-companies": {
      represents: "Q15712205",
      query:
        'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q15712205.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
      header: [
        { name: "name", property: "label", url: "item" },
        { property: "P571", options: { date: "year" } },
        { name: "P17", ellipsis: "30" },
        { name: "P159", ellipsis: "40" },
        { name: "P127", ellipsis: "40" },
        { name: "P2139" },
        { name: "P1329" },
        { property: "trustpilot_score" },
      ],
      dataset: ["trustpilot"],
    },
    "hotel-booking-websites": {
      query:
        'SELECT ?item ?itemLabel\n WHERE\n {\n ?item wdt:P31 wd:Q57590076.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n }',
      header: [
        { name: "name", property: "label", url: "item" },
        { property: "P571", options: { date: "year" } },
        { name: "P17", ellipsis: "30", visible: false },
        { name: "P159", ellipsis: "40" },
        { name: "P2139", visible: false },
        { name: "P1329", visible: false },
        { name: "P968", visible: false },
        { name: "P127", ellipsis: "30", visible: false },
        { name: "P2555" },
        { name: "P2541" },
        { property: "P1661", type: "integer" },
        { property: "trustpilot_score" },
        { property: "android_all_rating", visible: false },
        { property: "android_release_date", visible: false },
        { property: "android_downloads", visible: false },
        { property: "itunes_all_rating", visible: false },
        { property: "itunes_release_date", visible: false },
        { property: "itunes_all_reviews", visible: false },
      ],
      dataset: ["trustpilot", "alexa", "androidAppDetails", "itunesAppDetails"],
    },
    fictional_characters: {
      query:
        'SELECT ?item ?itemLabel\n WHERE\n {\n ?item wdt:P31 wd:Q95074.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n }',
      header: [
        { name: "name", property: "label", url: "item" },
        { name: "P569" },
        { name: "founded", property: "P571", options: { date: "year" } },
        { name: "P21" },
        { name: "P26" },
        { name: "P27" },
        { name: "P106" },
        { name: "P1441" },
        { name: "P175" },
      ],
    },
    films: {
      list: "Q623104",
      query:
        "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person .\n ?item wdt:P2047 ?duration .\n ?item wdt:P646 ?freeba .\n\n }",
      header: [
        { property: "label", url: "item" },
        { name: "P577", type: "date" },
        { name: "P136", ellipsis: 40 },
        { property: "imdb_rating" },
        { property: "imdb_count", type: "integer", visible: false },
        { property: "P144", visible: false },
        {
          name: "Q1068155",
          width: "30px",
          property: "ratio",
          type: "float",
          options: { round: 2 },
        },
        {
          name: "P4442",
          width: "30px",
          property: "avgage_actors",
          type: "float",
          options: { round: 2 },
        },
        { name: "actors", type: "integer" },
        { name: "P364" },
        { name: "P407", visible: false },
        { name: "P495" },
        { name: "P161", ellipsis: 40, type: "text", visible: false },
        { name: "P170", visible: false },
      ],
      dataset: [
        "imdb_rating",
        {
          query:
            "SELECT ?item ?women ?men (?women/(?women + ?men) AS ?ratio) (?men + ?women as ?actors) WHERE { {\n SELECT ?item (SUM(?woman) AS ?women) (SUM(?man) AS ?men) WHERE {\n ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person\n OPTIONAL {\n { ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n { ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n }\n }\nGROUP BY ?item\n}\nFILTER (?women + ?men > 4)\n}\nLIMIT 1000\n",
          update: "apifetch",
          file: "wikidata/film_sexratio.json",
          constraint: { item: "item" },
          properties: { ratio: "ratio", actors: "actors" },
        },
        {
          query:
            "#Average age of films\nSELECT ?item ?time (?ages / ?humans as ?avgage) ?humans WHERE { {\n SELECT ?item ?pubdate (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) WHERE {\n ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n OPTIONAL {\n ?item wdt:P161 ?person .\n ?item wdt:P577 ?pubdate .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n BIND( (year(?pubdate) - year(?birth_date)) AS ?age ) .\n }\n }\nGROUP BY ?item ?pubdate\n}\n FILTER (?humans > 4 )\n}\nLIMIT 1000\n\n",
          update: "apifetch",
          file: "wikidata/film_averageage.json",
          constraint: { item: "item" },
          properties: { avgage: "avgage_actors" },
        },
      ],
    },
    "television-series": {
      represents: "Q5398426",
      list: "Q7470411",
      todo: "\n SELECT DISTINCT ?item ?starttime WHERE {\n ?item wdt:P31 wd:Q5398426 .\n FILTER(NOT EXISTS { ?item wdt:P580 ?yearEnd. })\n ?item wdt:P1191 ?starttime .\n }\n#add start times\n SELECT DISTINCT ?item ?starttime WHERE {\n ?item wdt:P31 wd:Q5398426 .\n FILTER(NOT EXISTS { ?item wdt:P580 ?yearEnd. })\n ?item p:P449 ?network .\n ?network pq:P580 ?starttime.\n }\n\n ",
      query:
        "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n }",
      oldquery:
        "SELECT ?item ?women ?men (?women/(?women + ?men) AS ?ratio) (?ages / ?humans as ?avgage) (?humans as ?actors) WHERE {\n SELECT ?item (SUM(?woman) AS ?women) (SUM(?man) AS ?men) (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\nOPTIONAL {\n ?item wdt:P161 ?person .\n { ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n { ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n ?item wdt:P580 ?seriesstart .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n # ?death_date_node wikibase:timeValue ?death_date .\n # FILTER(?age > 10 && ?age < 100) . #ignore outlyers, several of which are probably errors\n BIND( year(?seriesstart) - year(?birth_date) as ?age ) .\n }\n }\nGROUP BY ?item\n} ",
      header: [
        { property: "label", url: "item" },
        { name: "P580", visible: false },
        { name: "P582", visible: false },
        { name: "P136", ellipsis: 40 },
        { property: "imdb_rating" },
        { property: "imdb_count", type: "integer", visible: false },
        {
          name: "Q1068155",
          width: "30px",
          property: "ratio",
          type: "float",
          options: { round: 2 },
        },
        {
          name: "P4442",
          width: "30px",
          property: "avgage_actors",
          type: "float",
          options: { round: 2 },
        },
        { name: "actors", type: "integer" },
        { name: "P364" },
        { name: "P407", visible: false },
        { name: "P495" },
        { name: "P161", ellipsis: 40, type: "text", visible: false },
        { name: "P449", ellipsis: 40 },
        { name: "P170", visible: false },
        { name: "P1113", type: "integer" },
        { name: "P2437", type: "integer", visible: false },
        { name: "P1874", sortable: false, visible: false },
      ],
      dataset: [
        "imdb_rating",
        {
          query:
            "SELECT ?item ?women ?men (?women/(?women + ?men) AS ?ratio) (?men + ?women as ?actors) WHERE { {\n SELECT ?item (SUM(?woman) AS ?women) (SUM(?man) AS ?men) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person\n OPTIONAL {\n { ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n { ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n }\n }\nGROUP BY ?item\n}\nFILTER (?women + ?men > 4)\n}",
          update: "apifetch",
          file: "wikidata/tvseriessexratio.json",
          constraint: { item: "item" },
          properties: { ratio: "ratio", actors: "actors" },
        },
        {
          query:
            "#Average age of ended series\n SELECT ?item ?seriesstart ?seriesend ?time (?ages / ?humans as ?avgage) ?humans WHERE { {\n SELECT ?item ?seriesstart ?seriesend (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) (?seriesend - ?seriesstart as ?time) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n OPTIONAL {\n ?item wdt:P161 ?person .\n ?item wdt:P580 ?seriesstart .\n ?item wdt:P582 ?seriesend .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n BIND( ( (year(?seriesend) + year(?seriesstart)) /2)- year(?birth_date) as ?age ) .\n }\n }\nGROUP BY ?item ?seriesstart ?seriesend\n}\n FILTER (?humans > 4 && ?time < 5000)\n}\n",
          update: "apifetch",
          file: "wikidata/tvseriesavgageended.json",
          constraint: { item: "item" },
          properties: { avgage: "avgage_actors" },
        },
        {
          query:
            "#Average age of ongoing series\n SELECT ?item ?seriesstart (?ages / ?humans as ?avgage) ?humans WHERE { {\n SELECT ?item ?seriesstart (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) (NOW() - ?seriesstart as ?time) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n FILTER(NOT EXISTS { ?item wdt:P582 ?seriesend . } )\n\n OPTIONAL {\n ?item wdt:P161 ?person .\n ?item wdt:P580 ?seriesstart .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n BIND( ( (year(NOW()) + year(?seriesstart)) /2)- year(?birth_date) as ?age ) .\n }\n }\nGROUP BY ?item ?seriesstart\n}\n FILTER (?humans > 4 && ?time < 5000)\n}\n\n",
          update: "apifetch",
          file: "wikidata/tvseriesavgageopen.json",
          constraint: { item: "item" },
          properties: { avgage: "avgage_actors" },
        },
      ],
    },
    netflix_series: {
      query:
        'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q5398426.\n ?item wdt:P449 wd:Q907311 .\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
      header: [
        { name: "name", property: "label", url: "item" },
        { name: "P170" },
        { name: "P136" },
        { name: "Q56260283", type: "float", property: "imdb_rating" },
        { property: "imdb_count", type: "integer" },
        { name: "P364" },
        { name: "P407" },
        { name: "P915" },
        { name: "P1113", type: "integer" },
        { name: "P1874", sortable: false },
      ],
      dataset: ["imdb_rating"],
    },
    "fictional-humans-tv": {
      represents: "Q15632617",
      query:
        'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q15632617.\n ?item wdt:P175 ?doesnt .\n ?item wdt:P1441 ?work .\n ?work wdt:P31 wd:Q5398426 .\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
      header: [
        { name: "name", property: "label", url: "item" },
        { name: "P21" },
        { name: "P569" },
        { name: "P26" },
        { name: "P27" },
        { name: "P106" },
        { name: "P1441", type: "text", ellipsis: 40 },
        { name: "P175", type: "text", ellipsis: 40 },
      ],
    },
    onlinetaxiservices: {
      represents: "Q65295049",
      query:
        "SELECT DISTINCT ?item WHERE {\n {?item wdt:P452 wd:Q65295049 } UNION {?item wdt:P452 wd:Q23582374} \n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P2669 ?yearEnd2. })\n\n \n }",
      header: [
        { property: "label" },
        { name: "P17" },
        { property: "P571", type: "integer", options: { date: "year" } },
        { property: "P2541" },
        { property: "trustpilot_score" },
        { property: "trustpilot_reviews" },
        { property: "P2003" },
        { property: "P3861" },
        { property: "P3418" },
        { property: "android_all_rating" },
        { property: "android_release_date" },
        { property: "android_downloads" },
        { property: "itunes_all_rating" },
        { property: "itunes_release_date" },
        { property: "itunes_all_reviews" },
        { property: "P1661", type: "integer" },
      ],
      dataset: [
        {
          function: "getdomainarray",
          constraint: { P856: 0 },
          properties: ["domain"],
        },
        "androidAppDetails",
        "itunesAppDetails",
        "trustpilot",
        "alexa",
      ],
    },
    "cryptocurrency-exchanges": {
      represents: "Q20107444",
      query:
        "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31 wd:Q20107444.\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n }",
      header: [
        { name: "Q82799", property: "label", url: "item" },
        { name: "P17" },
        { property: "P571", type: "integer", options: { date: "year" } },
        { name: "market_count", type: "integer" },
        {
          name: "Q240532",
          property: "fiat_currencies",
          ellipsis: "12",
          orderable: false,
          maxlength: 500,
        },
        {
          name: "crypto_currencies",
          ellipsis: "12",
          orderable: false,
          type: "text",
        },
        {
          name: "Q55956748",
          property: "P5896",
          options: { qualifiers: { P518: "Q55956748" } },
        },
        {
          name: "Q55956741",
          property: "P5896",
          options: { qualifiers: { P518: "Q55956741" } },
        },
        { property: "trustpilot_score" },
        { property: "publicAPI", type: "integer" },
        { property: "P1661", type: "integer" },
      ],
      dataset: [
        {
          function: "getdomainarray",
          constraint: { P856: 0 },
          properties: ["domain"],
        },
        "ccxt",
        "trustpilot",
        "alexa",
      ],
    },
    cryptocurrencies: {
      represents: "Q13479982",
      list: "Q15369810",
      header: [
        { name: "Q82799", property: "label", url: "item" },
        { property: "P571", options: { date: "year" } },
        { property: "P5810" },
        { property: "P5777" },
        { property: "P178" },
        { property: "P2283" },
        { property: "P277" },
        { property: "P275" },
        { property: "P306" },
      ],
      query:
        'SELECT ?item ?itemLabel WHERE\n{\n ?item wdt:P31 wd:Q13479982.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
    },
    isostandarts: {
      query:
        'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q15087423.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
    },
    banks: {
      query:
        'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q730038.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
      query2:
        'SELECT DISTINCT ?item ?itemLabel (GROUP_CONCAT(?lab; SEPARATOR = "|") AS ?labels)\nWHERE\n{\n ?item wdt:P31/wd:P279* wd:Q22687.\n ?item rdfs:label ?lab.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}\nGROUP BY ?item ?itemLabel\n',
      list: "Q2734055",
      header: [
        { name: "name", property: "label", url: "item" },
        { name: "P31", visible: false },
        { property: "P571", type: "integer", options: { date: "year" } },
        { name: "P17" },
        { name: "P1813", visible: false },
        { name: "P414", visible: false },
        { name: "P169", visible: false },
        { name: "P127" },
        { name: "P749" },
        { name: "P159" },
        { property: "trustpilot_score" },
        { name: "P2627", visible: false },
        { name: "P6963", visible: false },
        { name: "P1278", visible: false },
        { name: "P1128" },
      ],
      dataset: ["trustpilot"],
    },
    podcasts: {
      represents: "Q24634210",
      query:
        "SELECT DISTINCT ?item\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q24634210.\n}",
      header: [
        { property: "label" },
        { property: "P571", type: "integer", options: { date: "year" } },
        { name: "P580" },
        { name: "P582" },
        { name: "P136" },
        { name: "P449" },
        { name: "P17" },
        { name: "P371" },
        { name: "P407" },
        { name: "P5842" },
      ],
      dataset: [],
    },
    southparkepisodes: {
      list: "Q1540084",
      query:
        'SELECT ?item ?itemLabel ?season_no\nWHERE\n{\n ?item wdt:P31 wd:Q21191270 .\n ?item wdt:P179 wd:Q16538 .\n ?item wdt:P4908 ?season .\n ?season p:P179 ?season_stat .\n ?season_stat pq:P1545 ?season_no .\nSERVICE wikibase:label { bd:serviceParam wikibase:language "en" }\n}',
      header: [
        { name: "name", property: "label" },
        { property: "imdb_rating" },
        { property: "imdb_count", type: "integer", visible: false },
        { name: "P4908", property: "season_no", type: "integer" },
        { property: "P577" },
        { property: "P57" },
        { property: "P2364", visible: false },
      ],
      dataset: ["imdb_rating"],
    },
    tvstationgerman: {
      query:
        '\n SELECT ?item ?itemLabel\n WHERE\n {\n ?item wdt:P31 wd:Q1616075 .\n ?item wdt:P17 wd:Q183 .\n \tSERVICE wikibase:label { bd:serviceParam wikibase:language "de" }\n }',
    },
    german_railwaystations: {
      query:
        'SELECT DISTINCT ?item WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q55488.\n ?item wdt:P17 wd:Q183 .\n }',
      header: [
        { name: "name", property: "label", url: "item" },
        { name: "P1103" },
        { name: "P1619", options: { date: "year" } },
        { property: "P296" },
        {
          name: "Q34027",
          type: "string",
          visible: false,
          property: "P625",
          options: { value: "latitude" },
        },
        {
          name: "Q36477",
          type: "float",
          visible: false,
          property: "P625",
          options: { value: "longitude" },
        },
        { name: "P5105" },
        { name: "google_maps_name" },
        {
          name: "Q56024321",
          property: "google_maps_rating",
          url: "google_maps_url",
          type: "stars",
        },
      ],
      dataset: ["google_maps_cid"],
    },
    countries: {
      represents: "Q3624078",
      example:
        '\n //allcountries\n SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q6256.\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q3024240. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q15634554. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q28864179. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q1145276. })\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}\n\n #Goats\nSELECT DISTINCT ?item ?itemLabel ?iso ?iso2 ?country (GROUP_CONCAT(?alternative; SEPARATOR = "|") AS ?alt) WHERE {\n ?item wdt:P298 ?iso.\n OPTIONAL { ?item wdt:P297 ?iso2. }\n OPTIONAL { ?item wdt:P17 ?country. }\n\n FILTER NOT EXISTS {?item wdt:P31 wd:Q3024240}\n FILTER NOT EXISTS {?item wdt:P576 ?end}\n\n\n OPTIONAL { ?item skos:altLabel ?alternative . FILTER (lang(?alternative) = "en") }\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n}\nGROUP BY ?item ?itemLabel ?iso ?iso2 ?country\nLIMIT 2000',
      list: "Q11750",
      query:
        'SELECT DISTINCT ?item ?itemLabel ?article WHERE {\n ?item wdt:P31 wd:Q3624078.\n ?item wdt:P298 ?iso_country_code.\n ?article schema:about ?item .\n ?article schema:inLanguage "en" .\n ?article schema:isPartOf \n FILTER NOT EXISTS {?item wdt:P31 wd:Q3024240}\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n }',
      header: [
        { name: "Q82799", property: "label", url: "item" },
        {
          name: "Q1049294",
          sortable: false,
          property: "P1813",
          options: { qualifiers: { P31: "Q28840786" } },
        },
        { property: "P1705", visible: false },
        { property: "P37", ellipsis: "20", maxlength: 4000 },
        { property: "P571", options: { date: "year" } },
        { property: "P298", maxlength: 5 },
        { property: "P30", visible: false },
        { property: "P38", visible: false },
        {
          name: "Q56258795",
          property: "whr_happiness_score",
          type: "float",
          options: { round: 1 },
        },
        { property: "P2250", type: "float", options: { round: 1 } },
        {
          property: "P1082",
          type: "integer",
          render: 'bracket(formatToUnits(data,2),row["P1082_P585"])',
          options: { getqualifiers: { P585: "integer" }, round: 1, last: true },
        },
        {
          property: "P1081",
          type: "float",
          render: 'bracket(data,row["P1081_P585"])',
          options: { getqualifiers: { P585: "integer" }, round: 3, last: true },
          visible: false,
        },
        { property: "P1622", visible: false },
        { property: "P474", visible: false },
        {
          name: "happy_life_years",
          type: "integer",
          property: "happy_life_years",
          visible: false,
          options: { round: 2 },
        },
        {
          name: "wellbeing",
          type: "float",
          property: "average_wellbeing",
          visible: false,
          options: { round: 2 },
        },
        { name: "Q612956", type: "integer", property: "hpi_rank" },
        { property: "P36" },
      ],
      dataset: [
        {
          file: "xlsx/happy_planet_index-data-2016.xlsx",
          sheet: 4,
          preparse: [["country_to_code", "country", "P298"]],
          constraint: { P298: "P298" },
          properties: {
            hpi_rank: "hpi_rank",
            average_life_expectancy: "P2250",
            average_wellbeing0_10: "average_wellbeing",
            happy_life_years: "happy_life_years",
            footprintghacapita: "footprintghacapita",
            inequality_of_outcomes: "inequality_of_outcomes",
            inequality_adjusted_life_expectancy:
              "inequality_adjusted_life_expectancy",
            inequality_adjusted_wellbeing: "inequality_adjusted_wellbeing",
            happy_planet_index: "happy_planet_index",
            gdpcapitappp: "P4010",
            population: "P1082",
            gini_index: "P1125",
          },
        },
        {
          file: "xlsx/WHR2018Chapter2OnlineData.xls",
          sheet: 1,
          preparse: [["country_to_code", "country", "P298"]],
          constraint: { P298: "P298" },
          properties: { happiness_score: "whr_happiness_score" },
        },
      ],
    },
    "gps-tracker": {
      query:
        "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31/wdt:P279* wd:Q253677\n }",
      img: "gpstracker.jpg",
      header: [
        { property: "label" },
        { property: "P176" },
        { property: "P4140" },
      ],
    },
    gpstracker: {
      img: "gpstracker.jpg",
      header: [
        { name: "company" },
        { name: "model" },
        { name: "battery_life" },
        { name: "network" },
      ],
      dataset: [{ name: "Spreadsheet", spreadsheet: "gpstracker" }],
    },
    "credit-cards": {
      img: "creditcards.jpg",
      query:
        "SELECT DISTINCT ?item ?P856_alternative WHERE {\n ?item wdt:P31/wdt:P279* wd:Q161380\n FILTER NOT EXISTS {?item wdt:P576 ?end }\n FILTER NOT EXISTS {?item wdt:P582 ?endd }\n OPTIONAL { ?item wdt:P137 ?operator. ?operator wdt:P856 ?P856_alternative }\n\n\n }",
      header: [
        { name: "label" },
        { name: "P571" },
        { name: "P17" },
        { name: "P137" },
        { name: "Q56489330", property: "P5897" },
        { name: "P4443" },
        { name: "P4448", options: { show: "P518" } },
        { name: "Q55863525", property: "P5895" },
        { property: "P5898", type: "float" },
        { property: "P5899", type: "float" },
        { name: "trustpilot_score", type: "stars", render: "stars(data,0,10)" },
        { name: "trustpilot_reviews", visible: false },
      ],
      dataset: ["trustpilot"],
    },
    "german-creditcards": {
      img: "creditcards.jpg",
      list: "Q1727518",
      header: [
        { name: "bank", url: "P856" },
        { name: "name" },
        { name: "payment_gateway" },
        { name: "Q179179" },
        { name: "annual_fee" },
        { name: "Q55863525" },
        { name: "trustpilot_score", type: "stars", render: "stars(data,0,10)" },
        { name: "trustpilot_reviews" },
      ],
      dataset: [
        { name: "Spreadsheet", spreadsheet: "germany_creditcards" },
        "trustpilot",
      ],
    },
    german_universities: {
      parent: "universities",
      list: "Q330041",
      query:
        'SELECT DISTINCT ?item WHERE {\n ?item wdt:P31/wdt:P279* wd:Q38723.\n ?item wdt:P17 wd:Q183.\n ?article schema:about ?item .\n ?article schema:inLanguage "de" .\n ?article schema:isPartOf \n FILTER NOT EXISTS {?item wdt:P576 ?end }\n}',
    },
    "tourist-attractions": {
      represents: "Q570116",
      list: "Q6647249",
      query:
        'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q570116.\n ?item wdt:P17 wd:Q252\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
      header: [
        { name: "Q82799", property: "label", url: "P856" },
        { name: "google_maps_name", visible: false },
        { property: "P31", visible: false },
        { property: "P131" },
        { property: "P571", type: "date" },
        { property: "P17", ellipsis: "30" },
        { property: "P127", ellipsis: "25", visible: false },
        {
          name: "Q56024321",
          property: "google_maps_rating",
          url: "google_maps_url",
          type: "stars",
        },
        { property: "P2555", getqualifiers: { P518: "string" } },
        { property: "P757" },
        {
          property: "P1619",
          type: "integer",
          options: { date: "year" },
          visible: false,
        },
        { property: "P1174", type: "integer" },
        { property: "P2046" },
        {
          name: "Q34027",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "latitude" },
        },
        {
          name: "Q36477",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "longitude" },
        },
      ],
      dataset: ["google_maps_cid"],
    },
    museums: {
      represents: "Q33506",
      list: "Q17079082",
      query:
        'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q33506.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
      header: [
        { name: "Q82799", property: "label", url: "P856" },
        { name: "google_maps_name", visible: false },
        { property: "P31", visible: false },
        { property: "P131" },
        { property: "P571", type: "date" },
        { property: "P17", ellipsis: "30" },
        { property: "P127", ellipsis: "25", visible: false },
        {
          name: "Q56024321",
          property: "google_maps_rating",
          url: "google_maps_url",
          type: "stars",
        },
        {
          property: "P1619",
          type: "integer",
          options: { date: "year" },
          visible: false,
        },
        { property: "P1174", type: "integer" },
        { property: "P2046" },
        {
          name: "Q34027",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "latitude" },
        },
        {
          name: "Q36477",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "longitude" },
        },
      ],
      dataset: ["google_maps_cid"],
    },
    zoos: {
      represents: "Q43501",
      list: "Q910176",
      query:
        'SELECT ?item ?itemLabel \nWHERE \n{\n ?item wdt:P31 wd:Q43501.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
      header: [
        { name: "Q82799", property: "label", url: "P856" },
        { name: "google_maps_name", visible: false },
        { property: "P31", visible: false },
        { property: "P131" },
        { property: "P571", type: "date" },
        { property: "P17", ellipsis: "30" },
        { property: "P127", ellipsis: "25", visible: false },
        {
          name: "Q56024321",
          property: "google_maps_rating",
          url: "google_maps_url",
          type: "stars",
        },
        {
          property: "P1619",
          type: "integer",
          options: { date: "year" },
          visible: false,
        },
        { property: "P1174", type: "integer" },
        { property: "P2046" },
        { property: "P1990", type: "text", ellipsis: "25", visible: false },
        {
          name: "Q34027",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "latitude" },
        },
        {
          name: "Q36477",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "longitude" },
        },
      ],
      dataset: ["google_maps_cid"],
    },
    universities: {
      represents: "Q38723",
      example:
        '\n //ranked institions which are not higher educational institutions\n SELECT DISTINCT ?item ?itemLabel WHERE {\n {?item wdt:P5586 ?in} UNION {?item wdt:P5584 ?in} UNION {?item wdt:P5600 ?in} UNION {?item wdt:P5600 ?in}\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n FILTER(NOT EXISTS { ?item (wdt:P31/wdt:P279*) wd:Q38723. })\n}\n\n//exclude end date in P31\n?item p:P31 ?xx .\n FILTER NOT EXISTS { ?xx pq:P582 ?x }\n',
      list: "Q1846117",
      img: "universities.png",
      query:
        "SELECT DISTINCT ?item WHERE {\n ?item (wdt:P31/wdt:P279*) wd:Q38723 . \n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd2. })\n}",
      query_ranks:
        "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31/wdt:P279* wd:Q2385804.\n {?item wdt:P5586 ?in} UNION {?item wdt:P5584 ?in} UNION {?item wdt:P5600 ?in} UNION {?item wdt:P5600 ?in}\n}",
      name: "bla",
      orderby: "Q478743",
      header: [
        { name: "Q82799", property: "label", url: "item" },
        { property: "P131", visible: false },
        { property: "P17", valueconstraint: { P576: false } },
        { property: "P571", options: { date: "year" } },
        { property: "google_maps_rating" },
        {
          name: "Q1068155",
          width: "30px",
          property: "female_male_ratio",
          type: "float",
          options: { round: 2, take: 1 },
        },
        {
          property: "P2196",
          type: "integer",
          render:
            '(row["P2196_P585"] ? data+" ("+row["P2196_P585"]+")" : data)',
          options: {
            getqualifiers: { P585: "integer" },
            sort: 1,
            last: true,
            qualifiers: { P518: false },
          },
        },
        { name: "Q3595370", type: "float", property: "student_staff_ratio" },
        {
          name: "Q478743",
          property: "shanghai_rank",
          sort: "int",
          options: { sort: "rank" },
        },
        {
          name: "Q1318318",
          property: "times_rank",
          sort: "int",
          options: { sort: "rank" },
        },
        {
          name: "Q1790510",
          property: "qs_rank",
          sort: "int",
          options: { sort: "rank" },
        },
        { property: "P5894", visible: false },
        { name: "P5822", type: "float", options: { round: 3 }, visible: false },
        {
          property: "international_academic_staff",
          type: "float",
          visible: false,
          width: "45px",
          options: { round: 0 },
        },
        { property: "citation_rate", visible: false, options: { round: 0 } },
        {
          property: "foreign_lang_bachelor_programmes",
          visible: false,
          options: { round: 0 },
        },
        {
          property: "foreign_lang_master_programmes",
          visible: false,
          options: { round: 0 },
        },
        {
          property: "ontime_graduation_bachelor",
          type: "float",
          visible: false,
          options: { round: 2 },
        },
        {
          property: "ontime_graduation_master",
          type: "float",
          visible: false,
          options: { round: 2 },
        },
        {
          property: "bachelor_graduation_rate",
          type: "float",
          visible: false,
          options: { round: 2 },
        },
        {
          property: "masters_graduation_rate",
          type: "float",
          visible: false,
          options: { round: 2 },
        },
        {
          property: "wikidata_count_educated",
          type: "integer",
          visible: false,
        },
        { name: "P1329", visible: false },
      ],
      dataset: [
        "collegescorecard",
        "educated_at",
        "timesranking",
        "qsranking",
        "shanghairanking",
        "umultirank",
        "google_maps_cid",
      ],
    },
    occupations: {
      represents: "Q12737077",
      list: "Q6647133",
      query:
        'SELECT ?item ?avgAge ?avgBirthYear ?count\nWHERE\n{\n {\n # Group the people by their occupation and calculate age\n SELECT\n \t?item\n (count(?p) as ?count)\n (round(avg(?birthYear)) as ?avgBirthYear)\n (avg(?deathYear - ?birthYear) as ?avgAge)\n WHERE {\n {\n # Get people with occupation + birth/death dates; combine multiple birth/death dates using avg\n SELECT\n \t?p\n ?item\n (avg(year(?birth)) as ?birthYear)\n (avg(year(?death)) as ?deathYear)\n WHERE {\n ?p wdt:P31 wd:Q5 ;\n wdt:P106 ?item ;\n p:P569/psv:P569 [\n wikibase:timePrecision "9"^^xsd:integer ; # precision of at least year\n wikibase:timeValue ?birth ;\n ] ;\n p:P570/psv:P570 [\n wikibase:timePrecision "9"^^xsd:integer ; # precision of at least year\n wikibase:timeValue ?death ;\n ] .\n }\n GROUP BY ?p ?item\n }\n }\n GROUP BY ?item\n }\n FILTER (?count > 100) # arbitrary number to weed out values with few observations\n}',
      header: [
        { property: "label" },
        { property: "P425" },
        { property: "P5869", visible: false },
        { property: "P952" },
        { name: "count", property: "count", type: "integer" },
        {
          name: "avgBirthYear",
          property: "avgBirthYear",
          type: "float",
          options: { round: 2 },
        },
        {
          name: "Q42753521",
          property: "avgAge",
          type: "float",
          options: { round: 2 },
        },
      ],
      dataset: [],
    },
    currencies: {
      represents: "Q8142",
      list: "Q858338",
      img: "currencies.jpg",
      old: 'SELECT DISTINCT ?item ?itemLabel ?code WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q8142.\n ?item wdt:P498 ?code .\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q13479982 }) .\n FILTER(NOT EXISTS { ?item wdt:P582 ?country. })\n}',
      query:
        'SELECT DISTINCT ?item ?count ?ccc WHERE {\n SELECT ?item (count(?country) as ?count) (count(?cc) as ?ccc) WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q8142.\n ?item wdt:P498 ?code .\n ?item wdt:P17 ?country .\n #?cc wdt:P38 ?item .\n #?cc wdt:P31 wd:Q6256 .\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q13479982 }) .\n FILTER(NOT EXISTS { ?item wdt:P582 ?enddate. })\n }\n GROUP BY ?item\n}',
      header: [
        { property: "label" },
        { property: "P5061", visible: false },
        { property: "P17", ellipsis: "30", maxlength: 5000 },
        { name: "count", property: "count", type: "integer", visible: false },
        { property: "P580", options: { date: "year" } },
        { property: "P562" },
        { property: "P498" },
        {
          name: "Q66100",
          property: "lastrate",
          type: "float",
          options: { round: 2 },
        },
      ],
      dataset: [
        {
          url: "http://data.fixer.io/api/latest?access_key=6db77ed935ed63911e54b3cfe0124e2b&format=1",
          file: "currency/fixer_exchangerates.json",
          update: "apifetch",
          subarray: "rates",
          constraint: { P498: "arraykey" },
          properties: ["lastrate"],
        },
      ],
    },
    languages: {
      represents: "Q34770",
      list: "Q3183574",
      query:
        "SELECT DISTINCT ?item ?country WHERE {\n ?item wdt:P31/wdt:P279* wd:Q34770 .\n ?item wdt:P220 ?iso .\n ?item wdt:P218 ?id.\n OPTIONAL {\n ?country wdt:P31 wd:Q6256 . #country, or maybe use sovereign state, not sure\n ?country wdt:P37 ?item\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?end. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q34228. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q45762. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q38058796. })\n}\nORDER BY ?item\n",
      querytest:
        'SELECT DISTINCT ?item (GROUP_CONCAT(?country; SEPARATOR = "|") AS ?country) WHERE {\n ?item wdt:P31/wdt:P279* wd:Q34770 .\n ?item wdt:P220 ?iso .\n ?item wdt:P218 ?id.\n\n OPTIONAL {\n ?country wdt:P31 wd:Q6256 .\n ?country wdt:P37 ?item\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?end. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q34228. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q45762. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q38058796. })\n}GROUP BY ?item',
      examples:
        '\n\n#languages with the same ISO 639-3 code\nSELECT * WHERE {\n {\n SELECT ?id (COUNT(?obj) AS ?count) (GROUP_CONCAT(?obj; SEPARATOR = " , ") AS ?items) WHERE {\n ?obj wdt:P31 wd:Q34770 .\n ?obj wdt:P220 ?id.\n\n FILTER(NOT EXISTS { ?obj wdt:P576 ?yearEnd. })\n }\n GROUP BY ?id\n }\n FILTER(?count > 1)\n}\n',
      header: [
        { name: "Q82799", property: "label", url: "item" },
        { property: "P1705", visible: false },
        { property: "P220" },
        { property: "P218", visible: false },
        { property: "P17", maxlength: 5000, ellipsis: 40, visible: false },
        {
          name: "official_language_of",
          property: "country",
          maxlength: 5000,
          ellipsis: 40,
        },
        { property: "P2341", visible: false },
        { property: "P1249", visible: false },
        { property: "P282" },
        { property: "P1999" },
        {
          property: "P1098",
          type: "integer",
          render: 'bracket(formatToUnits(data),row["P1098_P585"])',
          options: {
            qualifiers: { P518: false },
            getqualifiers: { P585: "integer" },
            last: true,
          },
        },
        {
          name: "Q36870",
          type: "integer",
          property: "P1098",
          render: 'bracket(formatToUnits(data),row["Q36870_P585"])',
          options: {
            getqualifiers: { P585: "integer" },
            last: true,
            qualifiers: { P518: "Q36870" },
          },
        },
        {
          name: "Q125421",
          type: "integer",
          property: "P1098",
          render: 'bracket(formatToUnits(data),row["Q125421_P585"])',
          options: {
            getqualifiers: { P585: "integer" },
            last: true,
            qualifiers: { P518: "Q125421" },
          },
        },
        { property: "P424", formatterurl: "https://$1.wikipedia.org" },
        {
          name: "Q257885",
          property: "P4132",
          ellipsis: 8,
          multiple: true,
          render: "span(abbreviate(data),data)",
          options: {
            pick: [
              "Q166097",
              "Q539808",
              "Q568140",
              "Q651641",
              "Q989463",
              "Q1417850",
            ],
          },
        },
      ],
    },
    airports: {
      represents: "Q46970",
      list: "Q844436",
      img: "airport.jpg",
      query:
        "SELECT DISTINCT ?item ?airline WHERE {\n ?item wdt:P31/wdt:P279* wd:Q1248784.\n ?item wdt:P238 ?icao_airport.\n OPTIONAL {\n ?airline wdt:P31/wdt:P279* wd:Q46970 .\n ?airline wdt:P113 ?item .\n FILTER(NOT EXISTS { ?airline wdt:P576 ?airlineend. })\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd2. })\n } ORDER BY ?item",
      header: [
        { name: "Q82799", property: "label", url: "P856" },
        { name: "google_maps_name", visible: false },
        { property: "P31", visible: false },
        { property: "P239", width: "40px" },
        { property: "P238", width: "30px" },
        { property: "P17", ellipsis: "30" },
        { property: "P931" },
        {
          name: "hubforairline",
          property: "airline",
          maxlength: 5000,
          link: "airlines",
        },
        { property: "P127", ellipsis: "25", visible: false },
        {
          name: "Q56024321",
          property: "google_maps_rating",
          url: "google_maps_url",
          type: "stars",
        },
        {
          name: "departures",
          type: "integer",
          description: "Total scheduled departures",
        },
        {
          name: "connections",
          type: "integer",
          description: "Total airports served",
        },
        { property: "P1619", type: "integer", options: { date: "year" } },
        {
          name: "Q34027",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "latitude" },
        },
        {
          name: "Q36477",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "longitude" },
        },
        { name: "P1329", visible: false },
        { name: "IMC", type: "percent", visible: false, options: { round: 1 } },
        { name: "ICAOcityName", visible: false },
        { name: "P2044", type: "integer", visible: false },
      ],
      dataset: [
        "google_maps_cid",
        {
          name: "Airport Departure Statistics",
          source: "ICAO.int",
          file: "icao/departure-stats-2017.json",
          constraint: { P239: "Airport" },
          properties: {
            State: "ICAOP17",
            Departures: "departures",
            International: "international_departures",
            Domestic: "domestic_departures",
            Connections: "connections",
            InternationalConnections: "international_connections",
            DomesticConnections: "domestic_connections",
          },
        },
        {
          name: "Airport Safety characteristics",
          source: "ICAO.int",
          file: "icao/safety-characteristics-list.json",
          constraint: { P239: "airportCode" },
          properties: { cityName: "ICAOcityName", IMC: "IMC" },
        },
      ],
    },
    "international-airports": {
      represents: "Q644371",
      list: "Q16002152",
      img: "airport.jpg",
      example:
        '\n#airports in countries without country code\n SELECT DISTINCT ?airport ?airportLabel ?ICAO_airport_code WHERE {\n ?airport wdt:P31 wd:Q644371.\n ?airport wdt:P238 ?ICAO_airport_code.\n ?airport wdt:P17 ?country\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?airport wdt:P582 ?yearEnd })\n FILTER(NOT EXISTS { ?country wdt:P298 ?countrycode })\n }\n\n#including countriescodes\nSELECT DISTINCT ?item ?itemLabel ?icao (GROUP_CONCAT(DISTINCT ?c; SEPARATOR = ",") AS ?subjects) WHERE {\n ?item wdt:P31 wd:Q644371.\n ?item wdt:P238 ?icao.\n ?item wdt:P17 ?country.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n OPTIONAL { ?country wdt:P298 ?c. }\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n}\nGROUP BY ?item ?itemLabel ?icao ?subjects\n ',
      query:
        "SELECT DISTINCT ?item ?airline WHERE {\n ?item wdt:P31 wd:Q644371.\n ?item wdt:P238 ?icao_airport.\n OPTIONAL {\n ?airline wdt:P31/wdt:P279* wd:Q46970 .\n ?airline wdt:P113 ?item .\n FILTER(NOT EXISTS { ?airline wdt:P576 ?airlineend. })\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd2. })\n } ORDER BY ?item",
      header: [
        { name: "Q82799", property: "label", url: "P856" },
        { name: "google_maps_name", visible: false },
        { property: "P239", width: "40px" },
        { property: "P238", width: "30px" },
        { property: "P17", ellipsis: "30" },
        { property: "P931" },
        {
          name: "hubforairline",
          property: "airline",
          maxlength: 5000,
          link: "airlines",
        },
        { property: "P127", ellipsis: "25", visible: false },
        {
          name: "Q56024321",
          property: "google_maps_rating",
          url: "google_maps_url",
          type: "stars",
        },
        {
          name: "departures",
          type: "integer",
          description: "Total scheduled departures",
        },
        {
          name: "connections",
          type: "integer",
          description: "Total airports served",
        },
        { property: "P1619", type: "integer", options: { date: "year" } },
        {
          name: "Q34027",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "latitude" },
        },
        {
          name: "Q36477",
          type: "coordinate",
          visible: false,
          property: "P625",
          options: { value: "longitude" },
        },
        { name: "P1329", visible: false },
        { name: "IMC", type: "percent", visible: false, options: { round: 1 } },
        { name: "ICAOcityName", visible: false },
        { name: "P2044", type: "integer", visible: false },
      ],
      dataset: [
        "google_maps_cid",
        {
          name: "Airport Departure Statistics",
          source: "ICAO.int",
          file: "icao/departure-stats-2017.json",
          constraint: { P239: "Airport" },
          properties: {
            State: "ICAOP17",
            Departures: "departures",
            International: "international_departures",
            Domestic: "domestic_departures",
            Connections: "connections",
            InternationalConnections: "international_connections",
            DomesticConnections: "domestic_connections",
          },
        },
        {
          name: "Airport Safety characteristics",
          source: "ICAO.int",
          file: "icao/safety-characteristics-list.json",
          constraint: { P239: "airportCode" },
          properties: { cityName: "ICAOcityName", IMC: "IMC" },
        },
      ],
    },
    "pharmaceutical-companies": {
      represents: "Q19644607",
      query:
        'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q19644607\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
      list: "Q2087302",
      category: "medicine",
      header: [
        { name: "label" },
        { name: "P571" },
        { name: "P17" },
        { name: "trustpilot_score", type: "stars", render: "stars(data,0,10)" },
        { name: "trustpilot_reviews", visible: false },
      ],
    },
    airlines: {
      represents: "Q46970",
      list: "Q749488",
      img: "airplanes.jpg",
      category: "aviation",
      example:
        '#Find duplicate ICAO airline identifiers\nSELECT * WHERE {\n {\n SELECT ?id (COUNT(?obj) AS ?count) (GROUP_CONCAT(?obj; SEPARATOR = " , ") AS ?items) WHERE {\n ?obj wdt:P31 wd:Q46970 .\n ?obj wdt:P230 ?id.\n FILTER(NOT EXISTS { ?obj wdt:P576 ?yearEnd. })\n }\n GROUP BY ?id\n }\n FILTER(?count > 1)\n}\n\n#find countries of airlines without country which have a hub in a country\nSELECT ?item ?subjects WHERE {\n { SELECT DISTINCT ?item ?itemLabel (COUNT(?c) AS ?count) (group_concat(distinct ?c;separator=",") as ?subjects)\nWHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n ?item wdt:P230 ?icao.\n ?item wdt:P113 ?hub .\n ?hub wdt:P17 ?c .\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P17 ?country. })\n\n }\nGROUP BY ?item ?itemLabel\n} FILTER(?count < 2)\n}\n\n#airlines without country\nPREFIX vrank:\nSELECT DISTINCT ?item ?itemLabel\nWHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n ?item wdt:P230 ?icao.\n SERVICE {\n ?item vrank:hasRank/vrank:rankValue ?pr\n }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P17 ?country. })\n }\n\n#all airline without country\n SELECT DISTINCT ?item ?itemLabel\n WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n FILTER(NOT EXISTS { ?item wdt:P17 ?country. })\n }\n\n#airlines in muiltiple countries\nSELECT ?item ?subjects WHERE {\n { SELECT DISTINCT ?item ?itemLabel (COUNT(?c) AS ?count) (group_concat(distinct ?c;separator=",") as ?subjects)\nWHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31 wd:Q46970.\n ?item wdt:P230 ?icao.\n ?item wdt:P17 ?c .\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n }\nGROUP BY ?item ?itemLabel\n} FILTER(?count > 1)\n}\n\n#dbpediaquery about end Dates\nhttp://dbpedia.org/snorql/?query=SELECT+%3Fair+%3Ftitle+%3Fsamsas+%3Fceased+WHERE+%7B%0D%0A+%3Fair+a+dbo%3AAirline+.%0D%0A+%3Fair+foaf%3Aname+%3Ftitle+.%0D%0A+%3Fair+owl%3AsameAs+%3Fsamsas+.%0D%0A+%3Fair+dbp%3Aceased+%3Fceased+.%0D%0Afilter%28regex%28%3Fsamsas%2C+%22%5C%5Cwww.wikidata%5C%5Cb%22%2C%22i%22+%29%29+.%0D%0A%7D\n\n#airlines with parent organsitation with the same ICAO_airport_code\nSELECT DISTINCT ?item ?itemLabel ?parent ?parentLabel ?icao ?icao2 (group_concat(distinct ?cc;separator=",") as ?P17P298) WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31 wd:Q46970.\n ?item wdt:P230 ?icao.\n ?item wdt:P749 ?parent.\n ?parent wdt:P230 ?icao2.\n ?url schema:about ?item.\n ?url schema:inLanguage "en".\n ?url schema:isPartOf .\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?parent wdt:P576 ?yearEnd. })\n FILTER(?icao = ?icao2)\n OPTIONAL { ?item wdt:P17 ?country. ?country wdt:P298 ?cc. }\n}\nGROUP BY ?item ?itemLabel ?parent ?parentLabel ?countrycodes ?icao ?icao2\n\n\n\nPREFIX dbc: \nPREFIX dct: \nSELECT ?wsubject ?wsubjectLabel WHERE {\n SERVICE {\n ?subject dct:subject dbc:Defunct_airlines_of_Germany .\n ?subject owl:sameAs ?wsubject .\n FILTER (STRSTARTS(STR(?wsubject), "http://www.wikidata.org"))\n }\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en" }\n}\n\n?url\n?url schema:about ?item.\n?url schema:inLanguage "en".\n?url schema:isPartOf .\n\n',
      query:
        'SELECT DISTINCT ?item ?itemLabel (group_concat(distinct ?cc;separator=",") as ?P17P298) WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n ?item wdt:P230 ?icao.\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n OPTIONAL { ?item wdt:P17 ?country. ?country wdt:P298 ?cc. }\n}\nGROUP BY ?item ?itemLabel ?url ?countrycodes',
      exclude: ["Q7472651"],
      header: [
        { property: "label" },
        { property: "P229", width: "30px" },
        { property: "P230", width: "40px" },
        { property: "P5703", visible: false },
        { property: "P432", visible: false },
        { property: "P571", type: "integer", options: { date: "year" } },
        { property: "P17", ellipsis: 20 },
        { name: "trustpilot_score" },
        {
          name: "flightreport_score",
          type: "float",
          render: "stars(data,1,10)",
        },
        { name: "trustpilot_reviews", visible: false, type: "integer" },
        {
          name: "Q56248897",
          property: "airline_euban",
          type: "integer",
          width: "16px",
          render: "check(data)",
        },
        {
          name: "Q3146502",
          property: "isao_expiry",
          type: "string",
          render: "check((data ? true : false),data)",
          checkwhen: "string",
          rest: -1,
          width: "40px",
        },
        { name: "Q56245805", type: "integer", property: "aircrafts" },
        {
          name: "Q56027736",
          type: "float",
          property: "av_fleet_age",
          options: { round: 1 },
        },
        { name: "Q56423223", property: "routes", type: "integer" },
        { name: "Q56245830", property: "annual_flights", type: "integer" },
        {
          name: "Q744913",
          property: "airline_accidents",
          type: "integer",
          visible: false,
          render: '(data ? span(data,row["airline_accidents_years"]) : "")',
        },
        { name: "airline_accidents_years", hidden: true },
        { name: "airline_accident_rate", visible: false },
        { property: "P114", visible: false },
        { property: "P1661", visible: false },
        {
          name: "airports_iata",
          maxlength: 5000,
          ellipsis: 20,
          visible: false,
        },
        {
          name: "airports_countries",
          maxlength: 2000,
          ellipsis: 20,
          visible: false,
        },
        {
          name: "P113",
          visible: false,
          type: "text",
          link: "international-airports",
        },
        { name: "P121", visible: false, type: "text" },
      ],
      dataset: [
        "isao_report",
        "flightradar_airlines",
        "airline_accidents",
        {
          issues:
            ' "operatorName": "Jubba Airways (Somalia)",\n "operatorCode": "JUB",\n "countryName": "Somalia",\n "countryCode": "KEN",\n "av_fleet_age": 29,\n\nsee wrong countrycode\n ',
          url: "https://v4p4sz5ijk.execute-api.us-east-1.amazonaws.com/anbdata/airlines/risk/profile-stats?api_key=31901240-8ad6-11e8-9115-291bf0a4ae69&format=json&states={icaostates}",
          file: "icao/airlines_risk_profile.json",
          update: "apifetch",
          source: "ICAO.int",
          preparse: [
            ["icao_changecountrycode", "countryCode", "newCountryCode"],
          ],
          constraint: { P230: "operatorCode", P17P298: "newCountryCode" },
          properties: {
            telephonyName: "P432",
            models: "models",
            aircraft: "aircrafts",
            is_iosa_certified: "iosa_certified",
            av_fleet_age: "av_fleet_age",
            aircraft_over_25y: "aircraft_over_25y",
            is_international: "is_international",
            annual_flights: "annual_flights",
            annual_international_flights: "annual_international_flights",
            routes: "routes",
            accidents_5y: "accidents_5y",
          },
        },
        {
          source_url:
            "https://www.icao.int/safety/iStars/Pages/API-Data-Service.aspx",
          url: "https://v4p4sz5ijk.execute-api.us-east-1.amazonaws.com/anbdata/airlines/designators/code-list?api_key=31901240-8ad6-11e8-9115-291bf0a4ae69&format=json&states={icaostates}",
          file: "icao/airlines_designators_code_list.json",
          source: "ICAO.int",
          constraint: { P230: "operatorCode", P17P298: "countryCode" },
          properties: {
            operatorName: "registered_name",
            telephonyName: "P432",
          },
        },
        {
          function: "airline_accident_rate",
          constraint: {
            airline_accident_last10years: "accidents",
            annual_flights: "flights",
          },
          properties: { rate: "airline_accident_rate" },
        },
        {
          file: "flightstats/all.json",
          subarray: "airlines",
          constraint: { P230: "icao" },
        },
        {
          function: "flightreport",
          source: "flightreport",
          constraint: { P5579: 0 },
          properties: {
            score: "flightreport_score",
            review: "flightreport_reviews",
            url: "flightreport_url",
          },
        },
        {
          function: "airline_euban",
          source: "Wikipedia",
          constraint: { itemLabel: "name", P17P298: "countrycode" },
          properties: { eu_ban: "airline_euban" },
        },
        "alexa",
        "trustpilot",
      ],
    },
  },
};
