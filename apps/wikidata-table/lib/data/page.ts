import {
  WD_AGODA_HOTEL_NUMERIC_ID,
  WD_APPLE_PODCASTS_PODCAST_ID,
  WD_BOOKING_COM_HOTEL_ID,
  WD_CHECK_IN_TIME,
  WD_CHECK_OUT_TIME,
  WD_COUNTRY,
  WD_GOOGLE_MAPS_CUSTOMER_ID,
  WD_HOTEL_RATING,
  WD_INCEPTION,
  WD_LOCATED_IN_THE_ADMINISTRATIVE_TERRITORIAL_ENTITY,
  WD_PHONE_NUMBER,
  WD_POSTAL_CODE,
  WD_SPOTIFY_SHOW_ID,
  WIKIDATA_TYPE,
} from "@entitree/helper";
import { PAGE_EMOJI, PAGE_MUI_EMOJI } from "../emojis";
import { socialHotel } from "./addition";
import { hospitals, pharmaceutical_companies } from "./pages/medicine";
import { podcasts, podcast_episodes } from "./pages/podcast";
import { universities } from "./pages/universities";
import { Pages } from "./types";

export const WikidataPages: Pages = {
  // properties: {
  //   represents: null,
  //   query: "SELECT ?item WHERE {\n ?item a wikibase:Property .\n}",
  //   header: [{ name: "name", property: "label", url: "item" }],
  // },
  "mobile-network-operators": {
    represents: "Q1941618",
    category: "technology",
    query:
      'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q1941618.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
    header: [
      { property: "label" },
      { name: "P571", type: "date" },
      { property: "P17" },
      { property: "P159" },
      { property: "P414" },
      { property: "P2259" },
      { property: "P3744" },
    ],
  },
  hotels: {
    represents: "Q27686",
    category: "traveling",
    header: [
      { property: WD_COUNTRY },
      { property: WD_INCEPTION },
      { property: WD_LOCATED_IN_THE_ADMINISTRATIVE_TERRITORIAL_ENTITY },
      { property: WD_POSTAL_CODE },
      { property: WD_PHONE_NUMBER },
      { property: WD_CHECK_IN_TIME },
      { property: WD_CHECK_OUT_TIME },
      { property: WD_HOTEL_RATING },
      ...socialHotel,
    ],
  },
  smartphones: {
    represents: "Q19723451",
    category: "technology",
    // query:
    //   "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31 wd:Q19723451 .\n ?item wdt:P5906 ?dxo\n }",
    // // where: "?item wdt:P31 wd:Q19723451 .\n ?item wdt:P5906 ?dxo.",
    header: [
      { property: "label", url: "item" },
      { name: "P577", type: "date" },
      { name: "P2048" },
      { name: "P2067" },
      { name: "P2610", visible: false },
      { name: "P2928" },
      { name: "P306" },
      { name: "P176" },
      { name: "P4140" },
      { name: "P880" },
      { name: "P7080" },
      { name: "dxomark_camera_score" },
      { name: "P4723", visible: false },
      { name: "P6949", visible: false },
      { name: "P2935", visible: false },
      { name: "P2284", visible: false },
    ],
    dataset: ["dxomark"],
  },
  intercity_bus_companies: {
    represents: "Q15712205",
    category: "traveling",
    where: `?item wdt:P31 wd:Q15712205.`,
    query:
      'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q15712205.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
    header: [
      { name: "name", property: "label", url: "item" },
      { property: "P571", options: { date: "year" } },
      { name: "P17", ellipsis: "30" },
      { name: "P159", ellipsis: "40" },
      { name: "P127", ellipsis: "40" },
      { name: "P2139" },
      { name: "P1329" },
      { property: "trustpilot_score" },
    ],
    dataset: ["trustpilot"],
  },
  "hotel-booking-websites": {
    represents: "Q57590076",
    category: "traveling",
    header: [
      { name: "name", property: "label", url: "item" },
      { property: "P571", options: { date: "year" } },
      { name: "P17", ellipsis: "30", visible: false },
      { name: "P159", ellipsis: "40" },
      { name: "P2139", visible: false },
      { name: "P1329", visible: false },
      { name: "P968", visible: false },
      { name: "P127", ellipsis: "30", visible: false },
      { name: "P2555" },
      { name: "P2541" },
      { property: "P1661", type: "integer" },
      { property: "trustpilot_score" },
      { property: "android_all_rating", visible: false },
      { property: "android_release_date", visible: false },
      { property: "android_downloads", visible: false },
      { property: "itunes_all_rating", visible: false },
      { property: "itunes_release_date", visible: false },
      { property: "itunes_all_reviews", visible: false },
    ],
    dataset: ["trustpilot", "alexa", "androidAppDetails", "itunesAppDetails"],
  },
  fictional_characters: {
    represents: "Q95074",
    category: "entertainment",
    header: [
      { name: "name", property: "label", url: "item" },
      { name: "P569" },
      { name: "founded", property: "P571", options: { date: "year" } },
      { name: "P21" },
      { name: "P26" },
      { name: "P27" },
      { name: "P106" },
      { name: "P1441" },
      { name: "P175" },
    ],
  },
  films: {
    list: "Q623104",
    represents: "Q11424",
    category: "entertainment",
    where: ` ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person .\n ?item wdt:P2047 ?duration .\n ?item wdt:P646 ?freeba .`,
    query:
      "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person .\n ?item wdt:P2047 ?duration .\n ?item wdt:P646 ?freeba .\n\n }",
    header: [
      { property: "label", url: "item" },
      { name: "P577", type: "date" },
      { name: "P136", ellipsis: 40 },
      { property: "imdb_rating" },
      { property: "imdb_count", type: "integer", visible: false },
      { property: "P144", visible: false },
      {
        name: "Q1068155",
        width: "30px",
        property: "ratio",
        type: "float",
        options: { round: 2 },
      },
      {
        name: "P4442",
        width: "30px",
        property: "avgage_actors",
        type: "float",
        options: { round: 2 },
      },
      { name: "actors", type: "integer" },
      { name: "P364" },
      { name: "P407", visible: false },
      { name: "P495" },
      { name: "P161", ellipsis: 40, type: "text", visible: false },
      { name: "P170", visible: false },
    ],
    dataset: [
      "imdb_rating",
      {
        query:
          "SELECT ?item ?women ?men (?women/(?women + ?men) AS ?ratio) (?men + ?women as ?actors) WHERE { {\n SELECT ?item (SUM(?woman) AS ?women) (SUM(?man) AS ?men) WHERE {\n ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person\n OPTIONAL {\n { ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n { ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n }\n }\nGROUP BY ?item\n}\nFILTER (?women + ?men > 4)\n}\nLIMIT 1000\n",
        update: "apifetch",
        file: "wikidata/film_sexratio.json",
        constraint: { item: "item" },
        properties: { ratio: "ratio", actors: "actors" },
      },
      {
        query:
          "#Average age of films\nSELECT ?item ?time (?ages / ?humans as ?avgage) ?humans WHERE { {\n SELECT ?item ?pubdate (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) WHERE {\n ?item wdt:P31/wdt:P279* wd:Q11424 .\n ?item wdt:P345 ?imdb .\n OPTIONAL {\n ?item wdt:P161 ?person .\n ?item wdt:P577 ?pubdate .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n BIND( (year(?pubdate) - year(?birth_date)) AS ?age ) .\n }\n }\nGROUP BY ?item ?pubdate\n}\n FILTER (?humans > 4 )\n}\nLIMIT 1000\n\n",
        update: "apifetch",
        file: "wikidata/film_averageage.json",
        constraint: { item: "item" },
        properties: { avgage: "avgage_actors" },
      },
    ],
  },
  "television-series": {
    represents: "Q5398426",
    list: "Q7470411",
    category: "entertainment",
    // todo: "\n SELECT DISTINCT ?item ?starttime WHERE {\n ?item wdt:P31 wd:Q5398426 .\n FILTER(NOT EXISTS { ?item wdt:P580 ?yearEnd. })\n ?item wdt:P1191 ?starttime .\n }\n#add start times\n SELECT DISTINCT ?item ?starttime WHERE {\n ?item wdt:P31 wd:Q5398426 .\n FILTER(NOT EXISTS { ?item wdt:P580 ?yearEnd. })\n ?item p:P449 ?network .\n ?network pq:P580 ?starttime.\n }\n\n ",
    query:
      "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n }",
    // oldquery: "SELECT ?item ?women ?men (?women/(?women + ?men) AS ?ratio) (?ages / ?humans as ?avgage) (?humans as ?actors) WHERE {\n SELECT ?item (SUM(?woman) AS ?women) (SUM(?man) AS ?men) (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\nOPTIONAL {\n ?item wdt:P161 ?person .\n { ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n { ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n ?item wdt:P580 ?seriesstart .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n # ?death_date_node wikibase:timeValue ?death_date .\n # FILTER(?age > 10 && ?age < 100) . #ignore outlyers, several of which are probably errors\n BIND( year(?seriesstart) - year(?birth_date) as ?age ) .\n }\n }\nGROUP BY ?item\n} ",
    header: [
      { property: "label", url: "item" },
      { name: "P580", visible: false },
      { name: "P582", visible: false },
      { name: "P136", ellipsis: 40 },
      { property: "imdb_rating" },
      { property: "imdb_count", type: "integer", visible: false },
      {
        name: "Q1068155",
        width: "30px",
        property: "ratio",
        type: "float",
        options: { round: 2 },
      },
      {
        name: "P4442",
        width: "30px",
        property: "avgage_actors",
        type: "float",
        options: { round: 2 },
      },
      { name: "actors", type: "integer" },
      { name: "P364" },
      { name: "P407", visible: false },
      { name: "P495" },
      { name: "P161", ellipsis: 40, type: "text", visible: false },
      { name: "P449", ellipsis: 40 },
      { name: "P170", visible: false },
      { name: "P1113", type: "integer" },
      { name: "P2437", type: "integer", visible: false },
      { name: "P1874", sortable: false, visible: false },
    ],
    dataset: [
      "imdb_rating",
      {
        query:
          "SELECT ?item ?women ?men (?women/(?women + ?men) AS ?ratio) (?men + ?women as ?actors) WHERE { {\n SELECT ?item (SUM(?woman) AS ?women) (SUM(?man) AS ?men) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n ?item wdt:P161 ?person\n OPTIONAL {\n { ?person wdt:P21 wd:Q6581097. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q2449503. BIND(1 AS ?man). } UNION\n { ?person wdt:P21 wd:Q6581072. BIND(1 AS ?woman). } UNION\n { ?person wdt:P21 wd:Q1052281. BIND(1 AS ?woman). }\n }\n }\nGROUP BY ?item\n}\nFILTER (?women + ?men > 4)\n}",
        update: "apifetch",
        file: "wikidata/tvseriessexratio.json",
        constraint: { item: "item" },
        properties: { ratio: "ratio", actors: "actors" },
      },
      {
        query:
          "#Average age of ended series\n SELECT ?item ?seriesstart ?seriesend ?time (?ages / ?humans as ?avgage) ?humans WHERE { {\n SELECT ?item ?seriesstart ?seriesend (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) (?seriesend - ?seriesstart as ?time) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n OPTIONAL {\n ?item wdt:P161 ?person .\n ?item wdt:P580 ?seriesstart .\n ?item wdt:P582 ?seriesend .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n BIND( ( (year(?seriesend) + year(?seriesstart)) /2)- year(?birth_date) as ?age ) .\n }\n }\nGROUP BY ?item ?seriesstart ?seriesend\n}\n FILTER (?humans > 4 && ?time < 5000)\n}\n",
        update: "apifetch",
        file: "wikidata/tvseriesavgageended.json",
        constraint: { item: "item" },
        properties: { avgage: "avgage_actors" },
      },
      {
        query:
          "#Average age of ongoing series\n SELECT ?item ?seriesstart (?ages / ?humans as ?avgage) ?humans WHERE { {\n SELECT ?item ?seriesstart (SUM(?age) AS ?ages) (SUM(?human) AS ?humans) (NOW() - ?seriesstart as ?time) WHERE {\n ?item wdt:P31 wd:Q5398426 .\n ?item wdt:P345 ?imdb .\n FILTER(NOT EXISTS { ?item wdt:P582 ?seriesend . } )\n\n OPTIONAL {\n ?item wdt:P161 ?person .\n ?item wdt:P580 ?seriesstart .\n ?person p:P569/psv:P569 ?birth_date_node .\n ?birth_date_node wikibase:timeValue ?birth_date . BIND( 1 as ?human ) .\n BIND( ( (year(NOW()) + year(?seriesstart)) /2)- year(?birth_date) as ?age ) .\n }\n }\nGROUP BY ?item ?seriesstart\n}\n FILTER (?humans > 4 && ?time < 5000)\n}\n\n",
        update: "apifetch",
        file: "wikidata/tvseriesavgageopen.json",
        constraint: { item: "item" },
        properties: { avgage: "avgage_actors" },
      },
    ],
  },
  netflix_series: {
    category: "entertainment",
    query:
      'SELECT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q5398426.\n ?item wdt:P449 wd:Q907311 .\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
    represents: "Q5398426",
    where: `?item wdt:P31 wd:Q5398426.\n ?item wdt:P449 wd:Q907311.`,
    header: [
      { name: "name", property: "label", url: "item" },
      { name: "P170" },
      { name: "P136" },
      { name: "Q56260283", type: "float", property: "imdb_rating" },
      { property: "imdb_count", type: "integer" },
      { name: "P364" },
      { name: "P407" },
      { name: "P915" },
      { name: "P1113", type: "integer" },
      { name: "P1874", sortable: false },
    ],
    dataset: ["imdb_rating"],
  },
  "fictional-humans-tv": {
    represents: "Q15632617",
    category: "entertainment",
    query:
      'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31 wd:Q15632617.\n ?item wdt:P175 ?doesnt .\n ?item wdt:P1441 ?work .\n ?work wdt:P31 wd:Q5398426 .\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
    header: [
      { name: "name", property: "label", url: "item" },
      { name: "P21" },
      { name: "P569" },
      { name: "P26" },
      { name: "P27" },
      { name: "P106" },
      { name: "P1441", type: "text", ellipsis: 40 },
      { name: "P175", type: "text", ellipsis: 40 },
    ],
  },
  onlinetaxiservices: {
    represents: "Q65295049",
    category: "traveling",
    query:
      "SELECT DISTINCT ?item WHERE {\n {?item wdt:P452 wd:Q65295049 } UNION {?item wdt:P452 wd:Q23582374} \n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P2669 ?yearEnd2. })\n\n \n }",
    header: [
      { property: "label" },
      { name: "P17" },
      { property: "P571", type: "integer", options: { date: "year" } },
      { property: "P2541" },
      { property: "trustpilot_score" },
      { property: "trustpilot_reviews" },
      { property: "P2003" },
      { property: "P3861" },
      { property: "P3418" },
      { property: "android_all_rating" },
      { property: "android_release_date" },
      { property: "android_downloads" },
      { property: "itunes_all_rating" },
      { property: "itunes_release_date" },
      { property: "itunes_all_reviews" },
      { property: "P1661", type: "integer" },
    ],
    dataset: [
      {
        function: "getdomainarray",
        constraint: { P856: 0 },
        properties: ["domain"],
      },
      "androidAppDetails",
      "itunesAppDetails",
      "trustpilot",
      "alexa",
    ],
  },
  "cryptocurrency-exchanges": {
    represents: "Q20107444",
    where: `?item wdt:P31 wd:Q20107444.`,
    category: "finance",
    query:
      "SELECT DISTINCT ?item WHERE {\n ?item wdt:P31 wd:Q20107444.\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n }",
    header: [
      { name: "Q82799", property: "label", url: "item" },
      { name: "P17" },
      { property: "P571", type: "integer", options: { date: "year" } },
      { name: "market_count", type: "integer" },
      {
        name: "Q240532",
        property: "fiat_currencies",
        ellipsis: "12",
        orderable: false,
        maxlength: 500,
      },
      {
        name: "crypto_currencies",
        ellipsis: "12",
        orderable: false,
        type: "text",
      },
      {
        name: "Q55956748",
        property: "P5896",
        options: { qualifiers: { P518: "Q55956748" } },
      },
      // {
      //   name: "Q55956741",
      //   property: "P5896",
      //   options: { qualifiers: { P518: "Q55956741" } },
      // },
      { property: "trustpilot_score" },
      { property: "publicAPI", type: "integer" },
      { property: "P1661", type: "integer" },
    ],
    dataset: [
      {
        function: "getdomainarray",
        constraint: { P856: 0 },
        properties: ["domain"],
      },
      "ccxt",
      "trustpilot",
      "alexa",
    ],
  },
  cryptocurrencies: {
    represents: "Q13479982",
    list: "Q15369810",
    category: "finance",
    header: [
      { name: "Q82799", property: "label", url: "item" },
      { property: "P571", options: { date: "year" } },
      { property: "P5810" },
      { property: "P5777" },
      { property: "P178" },
      { property: "P2283" },
      { property: "P277" },
      { property: "P275" },
      { property: "P306" },
    ],
    query:
      'SELECT ?item ?itemLabel WHERE\n{\n ?item wdt:P31 wd:Q13479982.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
  },
  isostandarts: {
    represents: "Q15087423",
    category: "other",
  },
  banks: {
    represents: "Q730038",
    category: "finance",
    // query:
    //   'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q730038.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
    // query2: 'SELECT DISTINCT ?item ?itemLabel (GROUP_CONCAT(?lab; SEPARATOR = "|") AS ?labels)\nWHERE\n{\n ?item wdt:P31/wd:P279* wd:Q22687.\n ?item rdfs:label ?lab.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}\nGROUP BY ?item ?itemLabel\n',
    list: "Q2734055",
    header: [
      { name: "name", property: "label", url: "item" },
      { name: "P31", visible: false },
      { property: "P571", type: "integer", options: { date: "year" } },
      { name: "P17" },
      { name: "P1813", visible: false },
      { name: "P414", visible: false },
      { name: "P169", visible: false },
      { name: "P127" },
      { name: "P749" },
      { name: "P159" },
      { property: "trustpilot_score" },
      { name: "P2627", visible: false },
      { name: "P6963", visible: false },
      { name: "P1278", visible: false },
      { name: "P1128" },
    ],
    dataset: ["trustpilot"],
  },
  podcasts: podcasts,
  podcast_episodes,

  // southparkepisodes: {
  //   represents: "Q21191270",
  //   list: "Q1540084",
  //   query:
  //     'SELECT ?item ?itemLabel ?season_no\nWHERE\n{\n ?item wdt:P31 wd:Q21191270 .\n ?item wdt:P179 wd:Q16538 .\n ?item wdt:P4908 ?season .\n ?season p:P179 ?season_stat .\n ?season_stat pq:P1545 ?season_no .\nSERVICE wikibase:label { bd:serviceParam wikibase:language "en" }\n}',
  //   header: [
  //     { name: "name", property: "label" },
  //     { property: "imdb_rating" },
  //     { property: "imdb_count", type: "integer", visible: false },
  //     { name: "P4908", property: "season_no", type: "integer" },
  //     { property: "P577" },
  //     { property: "P57" },
  //     { property: "P2364", visible: false },
  //   ],
  //   dataset: ["imdb_rating"],
  // },
  // tvstationgerman: {
  //   represents: "Q1616075",
  //   query:
  //     '\n SELECT ?item ?itemLabel\n WHERE\n {\n ?item wdt:P31 wd:Q1616075 .\n ?item wdt:P17 wd:Q183 .\n \tSERVICE wikibase:label { bd:serviceParam wikibase:language "de" }\n }',
  // },
  // german_railwaystations: {
  //   query:
  //     'SELECT DISTINCT ?item WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q55488.\n ?item wdt:P17 wd:Q183 .\n }',
  //   header: [
  //     { name: "name", property: "label", url: "item" },
  //     { name: "P1103" },
  //     { name: "P1619", options: { date: "year" } },
  //     { property: "P296" },
  //     {
  //       name: "Q34027",
  //       type: "string",
  //       visible: false,
  //       property: "P625",
  //       options: { value: "latitude" },
  //     },
  //     {
  //       name: "Q36477",
  //       type: "float",
  //       visible: false,
  //       property: "P625",
  //       options: { value: "longitude" },
  //     },
  //     { name: "P5105" },
  //     { name: "google_maps_name" },
  //     {
  //       name: "Q56024321",
  //       property: "google_maps_rating",
  //       url: "google_maps_url",
  //       type: "stars",
  //     },
  //   ],
  //   dataset: ["google_maps_cid"],
  // },
  countries: {
    represents: "Q3624078",
    category: "other",
    example:
      '\n //allcountries\n SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q6256.\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q3024240. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q15634554. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q28864179. })\n FILTER(NOT EXISTS { ?item wdt:P31/wdt:P279* wd:Q1145276. })\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}\n\n #Goats\nSELECT DISTINCT ?item ?itemLabel ?iso ?iso2 ?country (GROUP_CONCAT(?alternative; SEPARATOR = "|") AS ?alt) WHERE {\n ?item wdt:P298 ?iso.\n OPTIONAL { ?item wdt:P297 ?iso2. }\n OPTIONAL { ?item wdt:P17 ?country. }\n\n FILTER NOT EXISTS {?item wdt:P31 wd:Q3024240}\n FILTER NOT EXISTS {?item wdt:P576 ?end}\n\n\n OPTIONAL { ?item skos:altLabel ?alternative . FILTER (lang(?alternative) = "en") }\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n}\nGROUP BY ?item ?itemLabel ?iso ?iso2 ?country\nLIMIT 2000',
    list: "Q11750",
    query:
      'SELECT DISTINCT ?item ?itemLabel ?article WHERE {\n ?item wdt:P31 wd:Q3624078.\n ?item wdt:P298 ?iso_country_code.\n ?article schema:about ?item .\n ?article schema:inLanguage "en" .\n ?article schema:isPartOf \n FILTER NOT EXISTS {?item wdt:P31 wd:Q3024240}\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n }',
    header: [
      { name: "Q82799", property: "label", url: "item" },
      {
        name: "Q1049294",
        sortable: false,
        property: "P1813",
        options: { qualifiers: { P31: "Q28840786" } },
      },
      { property: "P1705", visible: false },
      { property: "P37", ellipsis: "20", maxlength: 4000 },
      { property: "P571", options: { date: "year" } },
      { property: "P298", maxlength: 5 },
      { property: "P30", visible: false },
      { property: "P38", visible: false },
      {
        name: "Q56258795",
        property: "whr_happiness_score",
        type: "float",
        options: { round: 1 },
      },
      { property: "P2250", type: "float", options: { round: 1 } },
      {
        property: "P1082",
        type: "integer",
        render: 'bracket(formatToUnits(data,2),row["P1082_P585"])',
        options: { getqualifiers: { P585: "integer" }, round: 1, last: true },
      },
      {
        property: "P1081",
        type: "float",
        render: 'bracket(data,row["P1081_P585"])',
        options: { getqualifiers: { P585: "integer" }, round: 3, last: true },
        visible: false,
      },
      { property: "P1622", visible: false },
      { property: "P474", visible: false },
      {
        name: "happy_life_years",
        type: "integer",
        property: "happy_life_years",
        visible: false,
        options: { round: 2 },
      },
      {
        name: "wellbeing",
        type: "float",
        property: "average_wellbeing",
        visible: false,
        options: { round: 2 },
      },
      { name: "Q612956", type: "integer", property: "hpi_rank" },
      { property: "P36" },
    ],
    dataset: [
      {
        file: "xlsx/happy_planet_index-data-2016.xlsx",
        sheet: 4,
        preparse: [["country_to_code", "country", "P298"]],
        constraint: { P298: "P298" },
        properties: {
          hpi_rank: "hpi_rank",
          average_life_expectancy: "P2250",
          average_wellbeing0_10: "average_wellbeing",
          happy_life_years: "happy_life_years",
          footprintghacapita: "footprintghacapita",
          inequality_of_outcomes: "inequality_of_outcomes",
          inequality_adjusted_life_expectancy:
            "inequality_adjusted_life_expectancy",
          inequality_adjusted_wellbeing: "inequality_adjusted_wellbeing",
          happy_planet_index: "happy_planet_index",
          gdpcapitappp: "P4010",
          population: "P1082",
          gini_index: "P1125",
        },
      },
      {
        file: "xlsx/WHR2018Chapter2OnlineData.xls",
        sheet: 1,
        preparse: [["country_to_code", "country", "P298"]],
        constraint: { P298: "P298" },
        properties: { happiness_score: "whr_happiness_score" },
      },
    ],
  },
  gps_tracker: {
    represents: "Q253677",
    img: "gpstracker.jpg",
    category: "technology",
    header: [
      { property: "label" },
      { property: "P176" },
      { property: "P4140" },
    ],
  },
  credit_cards: {
    img: "creditcards.jpg",
    represents: "Q161380",
    category: "finance",
    query:
      "SELECT DISTINCT ?item ?P856_alternative WHERE {\n ?item wdt:P31/wdt:P279* wd:Q161380\n FILTER NOT EXISTS {?item wdt:P576 ?end }\n FILTER NOT EXISTS {?item wdt:P582 ?endd }\n OPTIONAL { ?item wdt:P137 ?operator. ?operator wdt:P856 ?P856_alternative }\n\n\n }",
    header: [
      { name: "label" },
      { name: "P571" },
      { name: "P17" },
      { name: "P137" },
      { name: "Q56489330", property: "P5897" },
      { name: "P4443" },
      { name: "P4448", options: { show: "P518" } },
      { name: "Q55863525", property: "P5895" },
      { property: "P5898", type: "float" },
      { property: "P5899", type: "float" },
      { name: "trustpilot_score", type: "stars", render: "stars(data,0,10)" },
      { name: "trustpilot_reviews", visible: false },
    ],
    dataset: ["trustpilot"],
  },
  // "german-creditcards": {
  //   img: "creditcards.jpg",
  //   list: "Q1727518",
  //   header: [
  //     { name: "bank", url: "P856" },
  //     { name: "name" },
  //     { name: "payment_gateway" },
  //     { name: "Q179179" },
  //     { name: "annual_fee" },
  //     { name: "Q55863525" },
  //     { name: "trustpilot_score", type: "stars", render: "stars(data,0,10)" },
  //     { name: "trustpilot_reviews" },
  //   ],
  //   dataset: [
  //     { name: "Spreadsheet", spreadsheet: "germany_creditcards" },
  //     "trustpilot",
  //   ],
  // },
  // german_universities: {
  //   parent: "universities",
  //   list: "Q330041",
  //   query:
  //     'SELECT DISTINCT ?item WHERE {\n ?item wdt:P31/wdt:P279* wd:Q38723.\n ?item wdt:P17 wd:Q183.\n ?article schema:about ?item .\n ?article schema:inLanguage "de" .\n ?article schema:isPartOf \n FILTER NOT EXISTS {?item wdt:P576 ?end }\n}',
  // },
  tourist_attractions: {
    represents: "Q570116",
    list: "Q6647249",
    category: "traveling",
    query:
      'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q570116.\n ?item wdt:P17 wd:Q252\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
    header: [
      { name: "Q82799", property: "label", url: "P856" },
      { name: "google_maps_name", visible: false },
      { property: "P31", visible: false },
      { property: "P131" },
      { property: "P571", type: "date" },
      { property: "P17", ellipsis: "30" },
      { property: "P127", ellipsis: "25", visible: false },
      {
        name: "Q56024321",
        property: "google_maps_rating",
        url: "google_maps_url",
        type: "stars",
      },
      { property: "P2555", getqualifiers: { P518: "string" } },
      { property: "P757" },
      {
        property: "P1619",
        type: "integer",
        options: { date: "year" },
        visible: false,
      },
      { property: "P1174", type: "integer" },
      { property: "P2046" },
      {
        name: "Q34027",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "latitude" },
      },
      {
        name: "Q36477",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "longitude" },
      },
    ],
    dataset: ["google_maps_cid"],
  },
  museums: {
    represents: "Q33506",
    list: "Q17079082",
    category: "traveling",
    query:
      'SELECT DISTINCT ?item ?itemLabel\nWHERE\n{\n ?item wdt:P31/wdt:P279* wd:Q33506.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n}',
    header: [
      { name: "Q82799", property: "label", url: "P856" },
      { name: "google_maps_name", visible: false },
      { property: "P31", visible: false },
      { property: "P131" },
      { property: "P571", type: "date" },
      { property: "P17", ellipsis: "30" },
      { property: "P127", ellipsis: "25", visible: false },
      {
        name: "Q56024321",
        property: "google_maps_rating",
        url: "google_maps_url",
        type: "stars",
      },
      {
        property: "P1619",
        type: "integer",
        options: { date: "year" },
        visible: false,
      },
      { property: "P1174", type: "integer" },
      { property: "P2046" },
      {
        name: "Q34027",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "latitude" },
      },
      {
        name: "Q36477",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "longitude" },
      },
    ],
    dataset: ["google_maps_cid"],
  },
  zoos: {
    represents: "Q43501",
    list: "Q910176",
    category: "traveling",
    query:
      'SELECT ?item ?itemLabel \nWHERE \n{\n ?item wdt:P31 wd:Q43501.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}',
    header: [
      { name: "Q82799", property: "label", url: "P856" },
      { name: "google_maps_name", visible: false },
      { property: "P31", visible: false },
      { property: "P131" },
      { property: "P571", type: "date" },
      { property: "P17", ellipsis: "30" },
      { property: "P127", ellipsis: "25", visible: false },
      {
        name: "Q56024321",
        property: "google_maps_rating",
        url: "google_maps_url",
        type: "stars",
      },
      {
        property: "P1619",
        type: "integer",
        options: { date: "year" },
        visible: false,
      },
      { property: "P1174", type: "integer" },
      { property: "P2046" },
      { property: "P1990", type: "text", ellipsis: "25", visible: false },
      // {
      //   name: "Q34027",
      //   type: "coordinate",
      //   visible: false,
      //   property: "P625",
      //   options: { value: "latitude" },
      // },
      // {
      //   name: "Q36477",
      //   type: "coordinate",
      //   visible: false,
      //   property: "P625",
      //   options: { value: "longitude" },
      // },
    ],
    dataset: ["google_maps_cid"],
  },
  universities: universities,
  occupations: {
    represents: "Q12737077",
    list: "Q6647133",
    category: "other",
    query:
      'SELECT ?item ?avgAge ?avgBirthYear ?count\nWHERE\n{\n {\n # Group the people by their occupation and calculate age\n SELECT\n \t?item\n (count(?p) as ?count)\n (round(avg(?birthYear)) as ?avgBirthYear)\n (avg(?deathYear - ?birthYear) as ?avgAge)\n WHERE {\n {\n # Get people with occupation + birth/death dates; combine multiple birth/death dates using avg\n SELECT\n \t?p\n ?item\n (avg(year(?birth)) as ?birthYear)\n (avg(year(?death)) as ?deathYear)\n WHERE {\n ?p wdt:P31 wd:Q5 ;\n wdt:P106 ?item ;\n p:P569/psv:P569 [\n wikibase:timePrecision "9"^^xsd:integer ; # precision of at least year\n wikibase:timeValue ?birth ;\n ] ;\n p:P570/psv:P570 [\n wikibase:timePrecision "9"^^xsd:integer ; # precision of at least year\n wikibase:timeValue ?death ;\n ] .\n }\n GROUP BY ?p ?item\n }\n }\n GROUP BY ?item\n }\n FILTER (?count > 100) # arbitrary number to weed out values with few observations\n}',
    header: [
      { property: "label" },
      { property: "P425" },
      { property: "P5869", visible: false },
      { property: "P952" },
      { name: "count", property: "count", type: "integer" },
      {
        name: "avgBirthYear",
        property: "avgBirthYear",
        type: "float",
        options: { round: 2 },
      },
      {
        name: "Q42753521",
        property: "avgAge",
        type: "float",
        options: { round: 2 },
      },
    ],
    dataset: [],
  },
  currencies: {
    represents: "Q8142",
    list: "Q858338",
    category: "finance",
    img: "currencies.jpg",
    // old: 'SELECT DISTINCT ?item ?itemLabel ?code WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q8142.\n ?item wdt:P498 ?code .\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q13479982 }) .\n FILTER(NOT EXISTS { ?item wdt:P582 ?country. })\n}',
    query:
      'SELECT DISTINCT ?item ?count ?ccc WHERE {\n SELECT ?item (count(?country) as ?count) (count(?cc) as ?ccc) WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q8142.\n ?item wdt:P498 ?code .\n ?item wdt:P17 ?country .\n #?cc wdt:P38 ?item .\n #?cc wdt:P31 wd:Q6256 .\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q13479982 }) .\n FILTER(NOT EXISTS { ?item wdt:P582 ?enddate. })\n }\n GROUP BY ?item\n}',
    header: [
      { property: "label" },
      { property: "P5061", visible: false },
      { property: "P17", ellipsis: "30", maxlength: 5000 },
      { name: "count", property: "count", type: "integer", visible: false },
      { property: "P580", options: { date: "year" } },
      { property: "P562" },
      { property: "P498" },
      {
        name: "Q66100",
        property: "lastrate",
        type: "float",
        options: { round: 2 },
      },
    ],
    dataset: [
      {
        url: "http://data.fixer.io/api/latest?access_key=6db77ed935ed63911e54b3cfe0124e2b&format=1",
        file: "currency/fixer_exchangerates.json",
        update: "apifetch",
        subarray: "rates",
        constraint: { P498: "arraykey" },
        properties: ["lastrate"],
      },
    ],
  },
  languages: {
    represents: "Q34770",
    list: "Q3183574",
    category: "other",
    query:
      "SELECT DISTINCT ?item ?country WHERE {\n ?item wdt:P31/wdt:P279* wd:Q34770 .\n ?item wdt:P220 ?iso .\n ?item wdt:P218 ?id.\n OPTIONAL {\n ?country wdt:P31 wd:Q6256 . #country, or maybe use sovereign state, not sure\n ?country wdt:P37 ?item\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?end. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q34228. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q45762. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q38058796. })\n}\nORDER BY ?item\n",
    // querytest: 'SELECT DISTINCT ?item (GROUP_CONCAT(?country; SEPARATOR = "|") AS ?country) WHERE {\n ?item wdt:P31/wdt:P279* wd:Q34770 .\n ?item wdt:P220 ?iso .\n ?item wdt:P218 ?id.\n\n OPTIONAL {\n ?country wdt:P31 wd:Q6256 .\n ?country wdt:P37 ?item\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?end. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q34228. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q45762. })\n FILTER(NOT EXISTS { ?item wdt:P31 wd:Q38058796. })\n}GROUP BY ?item',
    example:
      '\n\n#languages with the same ISO 639-3 code\nSELECT * WHERE {\n {\n SELECT ?id (COUNT(?obj) AS ?count) (GROUP_CONCAT(?obj; SEPARATOR = " , ") AS ?items) WHERE {\n ?obj wdt:P31 wd:Q34770 .\n ?obj wdt:P220 ?id.\n\n FILTER(NOT EXISTS { ?obj wdt:P576 ?yearEnd. })\n }\n GROUP BY ?id\n }\n FILTER(?count > 1)\n}\n',
    header: [
      { name: "Q82799", property: "label", url: "item" },
      { property: "P1705", visible: false },
      { property: "P220" },
      { property: "P218", visible: false },
      { property: "P17", maxlength: 5000, ellipsis: 40, visible: false },
      {
        name: "official_language_of",
        property: "country",
        maxlength: 5000,
        ellipsis: 40,
      },
      { property: "P2341", visible: false },
      { property: "P1249", visible: false },
      { property: "P282" },
      { property: "P1999" },
      {
        property: "P1098",
        type: "integer",
        render: 'bracket(formatToUnits(data),row["P1098_P585"])',
        options: {
          qualifiers: { P518: false },
          getqualifiers: { P585: "integer" },
          last: true,
        },
      },
      {
        name: "Q36870",
        type: "integer",
        property: "P1098",
        render: 'bracket(formatToUnits(data),row["Q36870_P585"])',
        options: {
          getqualifiers: { P585: "integer" },
          last: true,
          qualifiers: { P518: "Q36870" },
        },
      },
      {
        name: "Q125421",
        type: "integer",
        property: "P1098",
        render: 'bracket(formatToUnits(data),row["Q125421_P585"])',
        options: {
          getqualifiers: { P585: "integer" },
          last: true,
          qualifiers: { P518: "Q125421" },
        },
      },
      { property: "P424", formatterurl: "https://$1.wikipedia.org" },
      {
        name: "Q257885",
        property: "P4132",
        ellipsis: 8,
        multiple: true,
        render: "span(abbreviate(data),data)",
        options: {
          pick: [
            "Q166097",
            "Q539808",
            "Q568140",
            "Q651641",
            "Q989463",
            "Q1417850",
          ],
        },
      },
    ],
  },
  airports: {
    represents: "Q46970",
    list: "Q844436",
    img: "airport.jpg",
    category: "aviation",
    query:
      "SELECT DISTINCT ?item ?airline WHERE {\n ?item wdt:P31/wdt:P279* wd:Q1248784.\n ?item wdt:P238 ?icao_airport.\n OPTIONAL {\n ?airline wdt:P31/wdt:P279* wd:Q46970 .\n ?airline wdt:P113 ?item .\n FILTER(NOT EXISTS { ?airline wdt:P576 ?airlineend. })\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd2. })\n } ORDER BY ?item",
    header: [
      { name: "Q82799", property: "label", url: "P856" },
      { name: "google_maps_name", visible: false },
      { property: "P31", visible: false },
      { property: "P239", width: "40px" },
      { property: "P238", width: "30px" },
      { property: "P17", ellipsis: "30" },
      { property: "P931" },
      {
        name: "hubforairline",
        property: "airline",
        maxlength: 5000,
        link: "airlines",
      },
      { property: "P127", ellipsis: "25", visible: false },
      {
        name: "Q56024321",
        property: "google_maps_rating",
        url: "google_maps_url",
        type: "stars",
      },
      {
        name: "departures",
        type: "integer",
        description: "Total scheduled departures",
      },
      {
        name: "connections",
        type: "integer",
        description: "Total airports served",
      },
      { property: "P1619", type: "integer", options: { date: "year" } },
      {
        name: "Q34027",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "latitude" },
      },
      {
        name: "Q36477",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "longitude" },
      },
      { name: "P1329", visible: false },
      { name: "IMC", type: "percent", visible: false, options: { round: 1 } },
      { name: "ICAOcityName", visible: false },
      { name: "P2044", type: "integer", visible: false },
    ],
    dataset: [
      "google_maps_cid",
      {
        name: "Airport Departure Statistics",
        source: "ICAO.int",
        file: "icao/departure-stats-2017.json",
        constraint: { P239: "Airport" },
        properties: {
          State: "ICAOP17",
          Departures: "departures",
          International: "international_departures",
          Domestic: "domestic_departures",
          Connections: "connections",
          InternationalConnections: "international_connections",
          DomesticConnections: "domestic_connections",
        },
      },
      {
        name: "Airport Safety characteristics",
        source: "ICAO.int",
        file: "icao/safety-characteristics-list.json",
        constraint: { P239: "airportCode" },
        properties: { cityName: "ICAOcityName", IMC: "IMC" },
      },
    ],
  },
  "international-airports": {
    represents: "Q644371",
    list: "Q16002152",
    category: "aviation",
    img: "airport.jpg",
    example:
      '\n#airports in countries without country code\n SELECT DISTINCT ?airport ?airportLabel ?ICAO_airport_code WHERE {\n ?airport wdt:P31 wd:Q644371.\n ?airport wdt:P238 ?ICAO_airport_code.\n ?airport wdt:P17 ?country\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n FILTER(NOT EXISTS { ?airport wdt:P582 ?yearEnd })\n FILTER(NOT EXISTS { ?country wdt:P298 ?countrycode })\n }\n\n#including countriescodes\nSELECT DISTINCT ?item ?itemLabel ?icao (GROUP_CONCAT(DISTINCT ?c; SEPARATOR = ",") AS ?subjects) WHERE {\n ?item wdt:P31 wd:Q644371.\n ?item wdt:P238 ?icao.\n ?item wdt:P17 ?country.\n SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n OPTIONAL { ?country wdt:P298 ?c. }\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n}\nGROUP BY ?item ?itemLabel ?icao ?subjects\n ',
    query:
      "SELECT DISTINCT ?item ?airline WHERE {\n ?item wdt:P31 wd:Q644371.\n ?item wdt:P238 ?icao_airport.\n OPTIONAL {\n ?airline wdt:P31/wdt:P279* wd:Q46970 .\n ?airline wdt:P113 ?item .\n FILTER(NOT EXISTS { ?airline wdt:P576 ?airlineend. })\n }\n FILTER(NOT EXISTS { ?item wdt:P582 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd2. })\n } ORDER BY ?item",
    header: [
      { name: "Q82799", property: "label", url: "P856" },
      { name: "google_maps_name", visible: false },
      { property: "P239", width: "40px" },
      { property: "P238", width: "30px" },
      { property: "P17", ellipsis: "30" },
      { property: "P931" },
      {
        name: "hubforairline",
        property: "airline",
        maxlength: 5000,
        link: "airlines",
      },
      { property: "P127", ellipsis: "25", visible: false },
      {
        name: "Q56024321",
        property: "google_maps_rating",
        url: "google_maps_url",
        type: "stars",
      },
      {
        name: "departures",
        type: "integer",
        description: "Total scheduled departures",
      },
      {
        name: "connections",
        type: "integer",
        description: "Total airports served",
      },
      { property: "P1619", type: "integer", options: { date: "year" } },
      {
        name: "Q34027",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "latitude" },
      },
      {
        name: "Q36477",
        type: "coordinate",
        visible: false,
        property: "P625",
        options: { value: "longitude" },
      },
      { name: "P1329", visible: false },
      { name: "IMC", type: "percent", visible: false, options: { round: 1 } },
      { name: "ICAOcityName", visible: false },
      { name: "P2044", type: "integer", visible: false },
    ],
    dataset: [
      "google_maps_cid",
      {
        name: "Airport Departure Statistics",
        source: "ICAO.int",
        file: "icao/departure-stats-2017.json",
        constraint: { P239: "Airport" },
        properties: {
          State: "ICAOP17",
          Departures: "departures",
          International: "international_departures",
          Domestic: "domestic_departures",
          Connections: "connections",
          InternationalConnections: "international_connections",
          DomesticConnections: "domestic_connections",
        },
      },
      {
        name: "Airport Safety characteristics",
        source: "ICAO.int",
        file: "icao/safety-characteristics-list.json",
        constraint: { P239: "airportCode" },
        properties: { cityName: "ICAOcityName", IMC: "IMC" },
      },
    ],
  },
  pharmaceutical_companies,
  hospitals,
  airlines: {
    represents: "Q46970",
    list: "Q749488",
    img: "airplanes.jpg",
    category: "aviation",
    example:
      '#Find duplicate ICAO airline identifiers\nSELECT * WHERE {\n {\n SELECT ?id (COUNT(?obj) AS ?count) (GROUP_CONCAT(?obj; SEPARATOR = " , ") AS ?items) WHERE {\n ?obj wdt:P31 wd:Q46970 .\n ?obj wdt:P230 ?id.\n FILTER(NOT EXISTS { ?obj wdt:P576 ?yearEnd. })\n }\n GROUP BY ?id\n }\n FILTER(?count > 1)\n}\n\n#find countries of airlines without country which have a hub in a country\nSELECT ?item ?subjects WHERE {\n { SELECT DISTINCT ?item ?itemLabel (COUNT(?c) AS ?count) (group_concat(distinct ?c;separator=",") as ?subjects)\nWHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n ?item wdt:P230 ?icao.\n ?item wdt:P113 ?hub .\n ?hub wdt:P17 ?c .\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P17 ?country. })\n\n }\nGROUP BY ?item ?itemLabel\n} FILTER(?count < 2)\n}\n\n#airlines without country\nPREFIX vrank:\nSELECT DISTINCT ?item ?itemLabel\nWHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n ?item wdt:P230 ?icao.\n SERVICE {\n ?item vrank:hasRank/vrank:rankValue ?pr\n }\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?item wdt:P17 ?country. })\n }\n\n#all airline without country\n SELECT DISTINCT ?item ?itemLabel\n WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n FILTER(NOT EXISTS { ?item wdt:P17 ?country. })\n }\n\n#airlines in muiltiple countries\nSELECT ?item ?subjects WHERE {\n { SELECT DISTINCT ?item ?itemLabel (COUNT(?c) AS ?count) (group_concat(distinct ?c;separator=",") as ?subjects)\nWHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31 wd:Q46970.\n ?item wdt:P230 ?icao.\n ?item wdt:P17 ?c .\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n }\nGROUP BY ?item ?itemLabel\n} FILTER(?count > 1)\n}\n\n#dbpediaquery about end Dates\nhttp://dbpedia.org/snorql/?query=SELECT+%3Fair+%3Ftitle+%3Fsamsas+%3Fceased+WHERE+%7B%0D%0A+%3Fair+a+dbo%3AAirline+.%0D%0A+%3Fair+foaf%3Aname+%3Ftitle+.%0D%0A+%3Fair+owl%3AsameAs+%3Fsamsas+.%0D%0A+%3Fair+dbp%3Aceased+%3Fceased+.%0D%0Afilter%28regex%28%3Fsamsas%2C+%22%5C%5Cwww.wikidata%5C%5Cb%22%2C%22i%22+%29%29+.%0D%0A%7D\n\n#airlines with parent organsitation with the same ICAO_airport_code\nSELECT DISTINCT ?item ?itemLabel ?parent ?parentLabel ?icao ?icao2 (group_concat(distinct ?cc;separator=",") as ?P17P298) WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31 wd:Q46970.\n ?item wdt:P230 ?icao.\n ?item wdt:P749 ?parent.\n ?parent wdt:P230 ?icao2.\n ?url schema:about ?item.\n ?url schema:inLanguage "en".\n ?url schema:isPartOf .\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n FILTER(NOT EXISTS { ?parent wdt:P576 ?yearEnd. })\n FILTER(?icao = ?icao2)\n OPTIONAL { ?item wdt:P17 ?country. ?country wdt:P298 ?cc. }\n}\nGROUP BY ?item ?itemLabel ?parent ?parentLabel ?countrycodes ?icao ?icao2\n\n\n\nPREFIX dbc: \nPREFIX dct: \nSELECT ?wsubject ?wsubjectLabel WHERE {\n SERVICE {\n ?subject dct:subject dbc:Defunct_airlines_of_Germany .\n ?subject owl:sameAs ?wsubject .\n FILTER (STRSTARTS(STR(?wsubject), "http://www.wikidata.org"))\n }\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en" }\n}\n\n?url\n?url schema:about ?item.\n?url schema:inLanguage "en".\n?url schema:isPartOf .\n\n',
    query:
      'SELECT DISTINCT ?item ?itemLabel (group_concat(distinct ?cc;separator=",") as ?P17P298) WHERE {\n SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }\n ?item wdt:P31/wdt:P279* wd:Q46970.\n ?item wdt:P230 ?icao.\n FILTER(NOT EXISTS { ?item wdt:P576 ?yearEnd. })\n OPTIONAL { ?item wdt:P17 ?country. ?country wdt:P298 ?cc. }\n}\nGROUP BY ?item ?itemLabel ?url ?countrycodes',
    // exclude: ["Q7472651"],
    header: [
      { property: "label" },
      { property: "P229", width: "30px" },
      { property: "P230", width: "40px" },
      { property: "P5703", visible: false },
      { property: "P432", visible: false },
      { property: "P571", type: "integer", options: { date: "year" } },
      { property: "P17", ellipsis: 20 },
      { name: "trustpilot_score" },
      {
        name: "flightreport_score",
        type: "float",
        render: "stars(data,1,10)",
      },
      { name: "trustpilot_reviews", visible: false, type: "integer" },
      {
        name: "Q56248897",
        property: "airline_euban",
        type: "integer",
        width: "16px",
        render: "check(data)",
      },
      {
        name: "Q3146502",
        property: "isao_expiry",
        type: "string",
        render: "check((data ? true : false),data)",
        // checkwhen: "string",
        // rest: -1,
        width: "40px",
      },
      { name: "Q56245805", type: "integer", property: "aircrafts" },
      {
        name: "Q56027736",
        type: "float",
        property: "av_fleet_age",
        options: { round: 1 },
      },
      { name: "Q56423223", property: "routes", type: "integer" },
      { name: "Q56245830", property: "annual_flights", type: "integer" },
      {
        name: "Q744913",
        property: "airline_accidents",
        type: "integer",
        visible: false,
        render: '(data ? span(data,row["airline_accidents_years"]) : "")',
      },
      { name: "airline_accidents_years", hidden: true },
      { name: "airline_accident_rate", visible: false },
      { property: "P114", visible: false },
      { property: "P1661", visible: false },
      {
        name: "airports_iata",
        maxlength: 5000,
        ellipsis: 20,
        visible: false,
      },
      {
        name: "airports_countries",
        maxlength: 2000,
        ellipsis: 20,
        visible: false,
      },
      {
        name: "P113",
        visible: false,
        type: "text",
        link: "international-airports",
      },
      { name: "P121", visible: false, type: "text" },
    ],
    dataset: [
      "isao_report",
      "flightradar_airlines",
      "airline_accidents",
      {
        issues:
          ' "operatorName": "Jubba Airways (Somalia)",\n "operatorCode": "JUB",\n "countryName": "Somalia",\n "countryCode": "KEN",\n "av_fleet_age": 29,\n\nsee wrong countrycode\n ',
        url: "https://v4p4sz5ijk.execute-api.us-east-1.amazonaws.com/anbdata/airlines/risk/profile-stats?api_key=31901240-8ad6-11e8-9115-291bf0a4ae69&format=json&states={icaostates}",
        file: "icao/airlines_risk_profile.json",
        update: "apifetch",
        source: "ICAO.int",
        preparse: [["icao_changecountrycode", "countryCode", "newCountryCode"]],
        constraint: { P230: "operatorCode", P17P298: "newCountryCode" },
        properties: {
          telephonyName: "P432",
          models: "models",
          aircraft: "aircrafts",
          is_iosa_certified: "iosa_certified",
          av_fleet_age: "av_fleet_age",
          aircraft_over_25y: "aircraft_over_25y",
          is_international: "is_international",
          annual_flights: "annual_flights",
          annual_international_flights: "annual_international_flights",
          routes: "routes",
          accidents_5y: "accidents_5y",
        },
      },
      {
        source_url:
          "https://www.icao.int/safety/iStars/Pages/API-Data-Service.aspx",
        url: "https://v4p4sz5ijk.execute-api.us-east-1.amazonaws.com/anbdata/airlines/designators/code-list?api_key=31901240-8ad6-11e8-9115-291bf0a4ae69&format=json&states={icaostates}",
        file: "icao/airlines_designators_code_list.json",
        source: "ICAO.int",
        constraint: { P230: "operatorCode", P17P298: "countryCode" },
        properties: {
          operatorName: "registered_name",
          telephonyName: "P432",
        },
      },
      {
        function: "airline_accident_rate",
        constraint: {
          airline_accident_last10years: "accidents",
          annual_flights: "flights",
        },
        properties: { rate: "airline_accident_rate" },
      },
      {
        file: "flightstats/all.json",
        subarray: "airlines",
        constraint: { P230: "icao" },
      },
      {
        function: "flightreport",
        source: "flightreport",
        constraint: { P5579: 0 },
        properties: {
          score: "flightreport_score",
          review: "flightreport_reviews",
          url: "flightreport_url",
        },
      },
      {
        function: "airline_euban",
        source: "Wikipedia",
        constraint: { itemLabel: "name", P17P298: "countrycode" },
        properties: { eu_ban: "airline_euban" },
      },
      "alexa",
      "trustpilot",
    ],
  },
};

export const WikidataPageArray = Object.keys(WikidataPages).map(function (key) {
  let page = WikidataPages[key];
  page.id = key;
  if (!page.where && page.represents) {
    page.where = `?item wdt:P31 wd:${page.represents}.`;
  }
  if (PAGE_EMOJI[page.represents]) {
    page.emoji = PAGE_EMOJI[page.represents];
  }
  if (PAGE_MUI_EMOJI[page.id]) {
    page.muiEmoji = PAGE_MUI_EMOJI[page.id];
  }
  if (page.header) {
    page.header = page.header.map((row) => {
      if (!row.property) {
        row.property = row.name;
      }
      row.propertyType = WIKIDATA_TYPE[row.property];

      return row;
    });
    page.header = page.header.filter((row) => row.property.startsWith("P"));
    page.header.push({
      property: "P18",
    });
  }
  return page;
});
